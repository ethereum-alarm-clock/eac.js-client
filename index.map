{"version":3,"sources":["Cache/Cache.js","Cache/index.js","Wallet/Wallet.js","Wallet/index.js","Logger/DefaultLogger.js","Logger/index.js","Util.js","Config/Config.js","Config/index.js","Actions/Helpers.js","Enum/Networks.js","Enum/TxStatus.js","Enum/FnSignatures.js","Enum/index.js","Actions/Pending.js","Actions/Actions.js","Actions/index.js","Buckets/consts.js","Buckets/index.js","Scanner/Scanner.js","Scanner/index.js","EconomicStrategy/EconomicStrategyHelpers.js","EconomicStrategy/index.js","Router/Router.js","Router/index.js","Version.js","TimeNode.js","Stats/StatsDB.js","Stats/index.js","index.js"],"names":["mem_cache","_","Cache","constructor","logger","cache","mem","set","k","v","indexOf","push","put","get","d","undefined","Error","has","del","remove","addr","len","size","stored","isEmpty","sweepExpired","forEach","txRequestAddress","default","ethWallet","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Wallet","web3","length","nonce","walletStates","getBalanceOf","address","balance","eth","getBalance","_findSafeIndex","pointer","hasOwnProperty","_currentIndexes","keys","Object","indexes","map","key","parseInt","filter","n","slice","create","numAccounts","i","wallet","generate","add","getAddressString","idx","index","toLowerCase","rm","addressOrIndex","clear","encrypt","password","opts","toV3","loadPrivateKeys","privateKeys","privateKey","fromPrivateKey","Buffer","from","decrypt","encryptedKeystores","keystore","fromV3","sendFromNext","sendFromIndex","getNonce","account","getTransactionCount","err","res","sendRawTransaction","tx","concat","serialize","toString","getTransactionReceipt","hash","transactionReceiptAsync","_this","receipt","setTimeout","signTransaction","params","to","gas","toHex","gasPrice","data","ethTx","require","privKey","sign","isWalletAbleToSendTx","getAccounts","sendingTxInProgress","isNextAccountFree","eq","info","ignore","signedTx","debug","error","assign","getAddresses","isKnownAddress","some","DefaultLogger","msg","formatPrint","kind","console","log","timestamp","Math","floor","Date","now","W3Util","estimateGas","r","networkGasPrice","getGasPrice","getReceipt","txHash","getBlockNumber","getBlock","number","block","isWatchingEnabled","currentProvider","sendAsync","jsonrpc","id","method","Config","autostart","ms","scanSpread","walletStoresAsPrivateKeys","eac","factory","provider","walletStores","store","JSON","stringify","statsDb","util","economicStrategy","isExecuted","executedEvent","logs","topics","isTransactionStatusSuccessful","status","Networks","TxStatus","FnSignatures","_hasPendingParity","conf","txRequest","checkGasPrice","count","withValidGasPrice","hasValidGasPrice","exactPrice","isOfType","type","_hasPendingGeth","send","pending","transaction","valueOf","spread","currentGasPrice","input","hasPending","client","shortenAddress","Actions","config","claim","requiredDeposit","claimData","gasEstimate","refreshData","cost","BigNumber","gasUsed","mul","txData","updateClaimed","isClaimed","execute","gasToExecute","callGas","div","times","round","executeData","claimIndex","claimedBy","bounty","toDecimal","updateExecuted","wasSuccessful","cleanup","txRequestBalance","equals","isCancelled","cancelData","estGasPrice","gasCostToCancel","transactionHash","ownerIndex","owner","greaterThan","BucketSize","router","buckets","currentBuckets","blockBucket","timestampBucket","nextBuckets","eventWatchers","scanning","requestFactory","runAndSetInterval","fn","interval","wrapped","setInterval","start","chainScanner","watchBlockchain","backupScanBlockchain","cacheScanner","scanCache","stop","clearInterval","isUpcoming","beforeClaimWindow","inClaimWindow","inFreezePeriod","inExecutionWindow","getCurrentBuckets","latest","reqFactory","calcBucket","getNextBuckets","nextBlockInterval","nextTsInterval","getBuckets","handleRequest","request","isValid","bind","getRequestsByBucket","stopWatcher","bucket","watcher","stopWatch","watchRequestsByBucket","previousBucket","requestAddress","Constants","NULL_ADDRESS","Util","checkValidAddress","allTxRequests","transactionRequest","requests","all","route","Bb","exceedsMaxDeposit","maxDeposit","gt","isAboveMinBalanceLimit","minBalance","currentBalance","fromCallback","callback","isProfitable","paymentModifier","claimPaymentModifier","reward","minProfitability","lt","shouldClaimTx","profitable","enoughBalance","exceedsDepositLimit","TEMPORAL_UNIT","BLOCK","TIMESTAMP","Router","actions","txRequestStates","transitions","BeforeClaimWindow","ClaimWindow","claimWindow","FreezePeriod","freezePeriod","ExecutionWindow","executionWindow","Executed","executed","Missed","missed","Done","shouldClaim","claimed","inReservedWindowAndNotClaimedLocally","inReserved","inReservedWindow","isLocalClaim","wasCalled","isTransactionMissed","afterExecutionWindow","executionWindowEnd","Boolean","localClaim","isClaimedBy","accounts","statusFunction","nextStatus","version","TimeNode","scanner","Scanner","initialize","startupMessage","Version","logNetwork","getNetwork","startScanning","stopScanning","StatsDB","db","fetchedStats","getCollection","stats","addCollection","found","find","bounties","costs","insert","executedTransactions","plus","update","getStats"],"mappings":";;;;;;;AAAA;;IAAYA;;AACZ,AEOA;;IFPYC,AEOA4B;AERL,MAAMgH,aAAN,CAAoB,sBHAlBjH;AGCLvB,UAAMyI,GAAN,EAAW;AACP,aAAKC,WAAL,CAAiBD,GAAjB,EAAsB,OAAtB;AJAO,AICV,AFHL,IAAIhH,EFEiB5B,KAAN,CAAY,IEFV,aAAQ,UAAK4B,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AFGrF/B,AICAoI,AEJW,AJCX,MIDiBiB,IFIXV,CFHC,CIDI,CFIX,AEJwB,EFIb,CJDC1I,AEFA6B,MFEZ,AEFkBA,EFEE,EEFEE,OAAV,CAAL,EAAyB,OCD3BP,GDCqCQ,OAAV,EAAmBC,MAAnB,EAA2B;AFGvD,AICA,AEJJlC,AJCI,aFEKE,AICA0I,GEJG9F,CJCCX,CFET,EMHJ,CNGiB,CMHC,EFId,CJDiBtC,AICA8I,CFHjB,CAAmBvG,CEGnB,EAAsB,EFHtB,EAA0B,CFECrC,EIC3B,GJDa,EAAb;AACA,AICH,AEJG,AJA4B,aFGvBE,AMHA6C,GJA2B,CIAhC,ENGA,CMHYA,ENGE7C,EMHd,INGA;AACA,AONR,AHOIoI,AEJC,AJDqChG,UEKhCsG,GJDGxI,AICT,EAAW,CJDP,GAAW,EAAX,AEJuC4B,UAAUO,IAAV,CAAeF,KAAf,CAAL;AFKrC,AICG,AEJJkH,AJFoE,aEM3DV,AFNuB,CAAqC,EIEzDzD,IAAZ,CJF4E5C,CIE1D,AJFmD,EEMjE,AFN2E,CEM1DoG,CCRhBD,EDQD,EAAsB,OAAtB;AJAJtI,AICC,AEJG,AJH6E8B,QFM7E7B,CAAJ,EAAOC,CAAP,EAAU,CMHC,IAAI0B,IJHyEO,CAAP,EIGtE,CAAY,CAACN,OAAD,EAAUC,MAAV,KAAqB;AGLhD,ATSQ,AICJ+F,AEJQ,AJJqF,MOF3FoD,GLUG1C,GJDG7I,AICR,EJDUS,AICA,GEJGuC,EGNGiE,ETSR,AMHA,CNGU,AMHA1D,GAAV,CGNO,AHMOiG,CNGCnJ,GSTK,ATSpB,EAAoBE,CAApB,IMHA,CAA0B8E,CNGC,CAAC,CAAhC,CMHI,CNG+B,CMHC,CAAC5C,CAAD,EAAIgH,CAAJ,KAAU;AGLlD,ATSQ,AOTZ,AHUQ,AEJQ,AJLmF,QOD3FxC,KLUK6B,EKVT,EAAa,ATSAzI,GAAL,AMHQoC,CNGC/B,AMHL,EACI0B,CFGZ,CJDI,AICayG,CJDCtI,CAAd,CICJ,EAAsB,AEHHkC,CAAP,EADJ,GFIR,EEDYN,QAAQsH,CAAR;AGRZ,ATSC,AUXF,ANYF,AEDQ,AJRL,IQHGoC,SJMC,CGJEL,GPCG9I,QAAT,CAAkBJ,IODI,CPCtB,EAAyB,UQH1B,uDDEC;AACA,ATSA,AUXR,ANYIwG,AEDK,AJT0B,CQFlC,QJIc,CAAP,CIJG+C,EVWEzL,ESTE6G,CLUC4B,AFVuB,EFS/B,CAAWlI,AUXlB,ANYG,EMZiB,ANYAoI,CJDb,CSTe0C,ATSAlL,CAAf,CICJ,CJDsBC,CSTX,ATSP,AICmB,CKVC,CAAb,ATKD,CAIgB,CSTCkL,MAAhB,CAAuBjL,OAAvB,CAA+B+K,aAA/B,IAAgD,CAAC,CAAxD;AACH,ATSG,AUXJK,ACFG,APcC7C,AEDH,AJVoCzG,ISH9BuJ,SXaE3L,AUXA0L,GNYG5C,GJDR,AICA,CJDY7I,AICA2I,CFX0B9G,CQDxB,ENYd,CJDA,CAAmB,AICD,KMZb,ANYkBiH,AFXyB,IQDrB,CVWC3I,AUXhC,CVWkC,CEVQ,EQDN,ANYd,AFXuC+B,EEWzD,CIdCX,AGAF,CPcqCkH,CFXE,CAAL,CEWjC,EMZJ,GVWgDrI,CAAE,EAA9C;ASRJ,ATSC,AOZL,AGCIqL,ACFJ,APcK,AEDDnC,AJXuE,CSF1E,UFIU,AEJAoC,EDEED,ARAsB,CAAyC,EOExE,GEJH,EAAoB,ATE8DpJ,CQA7D,AJWA,AJXsD,EAAU,OQAzE,IAAsB,CAA/B,IAAoC,SAApC;ADGH,ATSG7B,AYfG,AFIHiL,ACFAC,APcA5C,AEDI,AJZgF9G,COHxF,GGAW2J,IZeHxL,CAAJ,EAAOM,CAAP,CUXSgL,ACFAC,CXaC,CMAC,CFCC,GEDG5J,GIXG,ACFA,CTCyEO,CAAP,EIYzE,CAAY,CAACN,EIXf,IAAqB,CAA9B,AJWuB,EAAUC,EIXE,ECF1B,ELac,EKbkB,CAAzC,CDEA,CJW4C,EKbE,CCF3C,kBDEH;AFKJ,ATSQ,AObR,AKFA,AFIIyJ,ACFAC,APcI,AEDI,AJbwF,CUFnG,KHMKH,KGNKI,EFIEF,ACFAC,EPcE3C,EEDEnG,GFCGoG,CEDR,CIXU,ACFA,ALaA7F,CMfrB,EAAwB,ARgBV,AEDH,CFCc8F,AEDAM,KIXb,ANYkBL,GAAL,CMZS,ACFtB,CDET,CJWQ,CGT2BsC,AHSD,CKbC,APcA,AEDAnJ,CIXC,ACFpC,ALakC,EAAIgH,CFC3B,AEDuB,CGTA,AEJM,APcpC,IKV0C,AHSF,CIX5C,QCFA;AFKA,ATSI,AYfJsC,AFIAF,ACFAC,APcC,AEDW,AJdsF,WOK3FF,CTSC,CUXCC,ACFAC,IXaI1L,AYfA,GNeGqC,CGTC,AHSL,CGTM,ATSV,AUXU,ACFA,CFID,ATSE7B,AMCHwB,CMhBhB,CHMqB,CTSb,CAAe7B,CAAf,AYfgB,EHMP,AHUMkC,CIZd,AJYO,CGVY,CHShB,CNAkB,CUXC,CAA/B,ACFS,EFIQ,ATSb,AMGYN,EGZoB1B,ATSA,AYfpC,AFIoC,ACFA,CAApC,IAAyC,CLgBjBgJ,CGZP,AHYD,CGZ4BmC,CCF5C,KDEiB,KEJjB,CFIwD,CAAC,CAAzD;AACH,ATSW,AYfRG,AFIAF,ACFAC,APLuB,AEqBd,AJjBL,COGR,YCAaD,ACFAC,ALWD,GNEIjL,CYfC,AVCA0B,IAAT,CFcczB,AUXA,ACFA,ATDA6B,IUDlB,EVCI,CQGK,CEJiB,AVCA,CFclB,EAAqB,AUXA,EAA7B,IAAmC,ACF1B,GCFT,CDEuC,CAAvC,EDEA,ECF4C,iBAA5C;AXcY,AYff,AFIA,ACFGmJ,ALgBK,AJlBuBnJ,CUHhC,AFAA,EEGGoJ,AFIAF,KDEMN,ALVI3C,CEeE,CAAP,GKTKkD,MTF0BlJ,EOM9B2I,CTSa,AWbA,CTFU,CQJrBM,ANAEjD,EJmBa7H,AEfoBoB,EUJnC4J,GZmBW,CAAU,AUX7B,ACFU,ETFyCpJ,CQItCkJ,CCFoB,CAAhC,GCFD,CDEsC,ATFoBvJ,EUAzCyJ,GFIO,ARJmB,CAAd,CQI7B,CAPH,CRGsE,CSElE,GTFsE/J,CAAJ,CAAM,EUAzC,EAAhC,CAHH,KVGsFG,OAAV,EAAmB,QFezE,CAAN;AACH,AWbT2J,ALgBC,AJnB4F3J,QOM5EwJ,KTQT,AWXCG,MXeG,GWfM,ETHmFnJ,EFkBlF9B,CAAP,GWfH,CTHmGyB,GSG9E,CAA9B,CTH6F,GSG1D,CFGlBqJ,OEHjB;AGCJ,AdeS,AWfLG,ALgBAlC,AJpBqH,QaOzGwD,KJHHtB,ATJyD,EIoBvDjC,AJpB4GhH,IAArD,CAA0DR,CIoB5H,CKhBkB,CLgBC,ESbP+K,GJHH,CTJyD,EAAqE1K,CSI3G,CAA5B,IAAiC,ETJiC,CAAtC,GSI5B;AXgBI,AOpBO,AIKd,ALgBO,AJrB+I,CSHvJ,EAQGoJ,GJLkBtB,MAAN,CPoBFrK,AOpBe,EDqBb,INDP,AMCW+B,CNDC9B,IWxBT0L,CXwBH,CAAmB,AMCZ,CAAY,CAAC3J,IKhBzB,GAAa2J,ALgBW,EAAU1J,CNDC7B,CAAE,EAAhC,EMCmB,GKhBA,EAAxB,ALgB6C,CKxBhD;AIOA,ADRA,AdyBQ,AOpBJL,ADqBQ,AJrBJqC,IYLJV,SZKS,CAACI,CFoBC,CczBE,APKDmF,CDqBCpE,GNDG5C,CazBXyL,AP0BG,CCrBR,ADqBkBtI,ECrBE,CPoBT,AMCH,CNDc3C,AMCAiG,AJrBA5E,GYLD,AdyBV,CAAe1B,CAAf,CAAP,IEpB4BuC,GYLNjB,EZKJ,CAAgBC,KIqB9B,CQ1BI,AR0BgC+H,CJrBtB,EAAyB9H,CYLP,ER0BhC,EAA4C,CAACU,CAAD,EAAIgH,CAAJ,CQ1BF3H,GZKW,CIqBC,CJrBxC,CAAb,CYL+B,CZK0BU,CYLPT,GZKlD,EAAL,KYLoC,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,AdyBC,AOpBG,ADqBQ,AJrBX,KALM,CAAP,KYAO,EPKEwI,GOLGzI,IR0BIS,CAAJ,CQ1BMT,APKd,CDsBYI,ECtBKgF,COLClF,IR2BCO,CAAP,CCtBYgI,COLhB,AR0BA,CQ1BL,EAAyB,ER6BhBtI,GCxBK,IAAoB,COLCA,AR6BlBsH,CAAR,ECxBZ,IOL4B,EAAmBrH,MAAnB,EAA2B;AACvD,AGFD,AjB2BHpB,AOpBI,ADwBK,AJxBZ,CAPD,KeAa2O,EjB2BLpP,CAAJ,EAAO,EOpBEmK,ADmBD,ECnBJ,EOLSrI,CPKC+E,OAAOsD,COLjB,CAAmBpI,APKT,IAAa,COLvB,EAA0B,CPK1B,KUPkB;AHEU,AGDhC2H,AjB2BI,AOpBA,ADwBC,AJvBM,MAAMlH,GIgBN,CAAP,CWxBG,CjB2BC,AEnBG,CKDF4H,ALCe,CeTF,EHEc,Cd0BvBvK,KAAL,CAAWQ,AOpBf,GPoBI,AOpBcwG,CPoBC7G,CAAf,KOpBqBoK,CPoBC,IAA1B,EAAgC,GOpBd,IAAqB,EAAvC;AQCR,ADP0CpI,AGAtC2G,AjB2BQ,AOpBJ,ADwBH,AJvBDhJ,aKDS0K,EUPE,CfQC5H,CFmBC7C,GEnBb,CYR2C8B,CZQzB9B,CFmBV,CAAYC,IEnBpB,CFmBQ,CAAmB,AEnBD,CYR2BoC,IAAV,CAAeF,Ed2BxB/B,AOpB9B,CPoBgC,Ec3BO,Ad2BnC,AOpB6B6G,COPC,MPOMwD,yBAAxC;AOPgE,AGF9C,AjB8Bd,AOpBJ,ADwBJd,AJvBI,CeXD,YHE6B,APQvB3J,ALCA8C,CYT4D,Kd4BtD,AOpBX,ALCA,EYTwER,ARgC3D,CQhCoD,APQnD2E,ALCA,CAAd,CYT2E,Ad4BvE,KOpBiBjH,MAAP,IAAiB,IAAIyI,qBAAJ,EAA/B;AQAR,ADRqFxG,Ad6B5E,AOpBD,ADwBA,AJvBA,aKDKhC,ALCAD,EIuBE,GCxBP,CDwBW+B,AJvBX,EKDa,CLCC/B,CYVsEsC,CAAP,CPS5DxC,CDwBV,CAAY,CAACkC,AJvBpB,OIuBmB,EAAUC,GCxBhB,CAAU,EDwBJ,CUnClBT,ETW2BxB,EDwBY,ICxB3B,CAAb;AOTyF,Ad8BzF,AOpBA,AYJR,Ab4BY,AJvBJ,YKDIiH,CPoBCjH,AEnBA+C,IIuBIF,CJvBT,CFmBA,AOpBW6H,CPoBCzK,CMIR,AJvBS,CKDT,ADwBUmD,AJvBd,GFmBA,AMII,CNJe,AOpBD6D,ADwBA0C,ONJOvJ,AOpBAuK,CPoBE,EAA3B,IOpBI,ADwBA,CAA6B,CAACrI,CAAD,CCxBG2E,CDwBCqC,CAAJ,KCxBUsB,ADwBA,QCxBvC,IAAmD3D,OAAOpE,IAA9D,EAAoE;AOVuB,Ad+B3F,AOpBI,ADwBI,AJvBR,aAAKA,EFmBE,EOpBE6H,ALCT,EFmBA,COpBI,ADwBQpI,AJvBAO,CIuBJ,ECxBOoE,ADyBHhF,CJxBZ,MKDsByI,ADyBHpI,CAAP,ECzBR,ADwBI,KAGIN,QAAQsH,CAAR;AQrCZ,Ad+BH,AOpBO,AYdZ,AbyCa,AJ1BL,IiBfJ5H,SboCQ,AJrBCsB,GiBfI,CLGAT,APWAoI,IMbRgB,GNaG,COXJ,AZYA,CYZkBxJ,CPWC8E,CLCC,CiBfH,CjBejB,CYZA,EAAyB,CPWC0D,KYdJjJ,EZclB,OYdI,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;ALGtD,AdgC/BhB,AOpBQ,AYdR,AbyCK,AJ1BJ,QFmBGV,CAAJ,AMAW,CAAP,CNAG,AmBlCA,KLE4B,AKFvByB,CZcC+I,EWfR4E,GCCa3N,GZcV,CYdcE,EZcEkF,KYdZ,CAAL,CZcwB2D,CYdC,OZcxB,GYdkC5I,OAAV,EAAmBC,MAAnB,EAA2B;ALEtBG,AdiCjC,AOpBI,AYdJ,AbyCH,AJ1BDa,iBKDaJ,AYdAX,AjBeAgB,IYd6BpB,APalC,GAAYmF,ALCpB,EiBfI,AjBekB,CiBfC9E,ILC6B,APazBU,CYdvB,EAA0B,CZctB,GObkC,EAAmBV,KAAnB,CAAL;ACHzC,ADG2E,AdkCnEtC,AOpBC,AYf2B,Ab0ChC+J,AJ1BI,IalBJlI,KRYI,CPyBEX,GclCyB,ARyCtB8I,CQzC+D,CPe/D,ALAE,CalBE,AfqCT,AmBnCgC,CnBmCvB,EEnBE9H,EYfgEO,CAAP,AdkCtDpC,AMOA,EQzCgE,CdkC9E,CEnBO,CFmBac,AEnBAgB,EalBH,CT4CrB,CNPuB,CMOK,EJ1BL,CFmBUhB,GEnBG,CalBVU,KfqCgBtB,CAAtC,GerCQ,IAA4B,UAAUuB,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,ADEoFG,AdmChF,AOnBI,AcXZ,AFN0CG,Ab2ClC,AJ1BI,WalBD,EfqCEnC,EMOE,CS5CC4B,EfqCR,AOnBU,ALAAsB,CFmBCrC,AMOAiB,Ea3C4BD,CJDzBD,AfqCd,AOnBcjB,COhByE0B,AdmCxElC,CcnCiE,AdmChF,EerCkB2B,AT4CX,CC1BG,AD0BS,CC1BC,AD0BAC,AJ1BA,GiBjB6BK,EJDzC,AbkBiBQ,CalBtB,CICoC,Ab2CpB,CS5CS,AIC0BV,Cb2CzBF,AJ1BT,CAAUmB,GiBjBS,AjBiBnB,CiBjBc,AjBiBAC,CI0Bf,GS5CmBrB,ET4CE,IJ1BpB,CalBQ,AbkBiBkB,EalBEjB,KbkB3B,CalBQ,AbkBxB,EalBmD,2CRkB7C,CAAN;AQjBJ,ADC4F,AdoC5F,AOnBC,AYlB+D,Ab4C5D,AJ1BAD,aFmBChC,AmBrCuB,CAAqC,GJAxDkC,AT4CAW,ENPT,CAAY5C,AEnBAkD,CiBlB4Db,Ab4CpE,Ca5C6D,Ab4CnDc,Ea5C6D,CnBqC3E,AMOI,CS5CJ,AfqCmB,AMODwG,CS5CCzH,AbkBf,KalBJ,EAA0B,AT4CtB,CAAuB0H,ENPEzJ,CAAE,EAA/B,CMOI,EAA+B,Cc9ClCoB,Ad8CmC2E,GAAD,EAAM2D,KAAN,KAAgB;AS5CvB,ADCkE,AdqCjG,AOnBG,AYnB6E7H,Ab6CrE,AJ1BP,ImBbGgR,KnBUG,CAAP,EKGIhM,IQnB4B,GRmBrB4D,CD0BC,CAAC1E,Ea7CuE7D,CAAP,Ab6CrE,OC1BJ,IACA2E,OAAO4D,YAAP,CAAoB/H,MADpB,IAEAmE,OAAO4D,YAAP,CAAoB/H,MAApB,GAA6B,CAFjC,EAEoC;AQrBFV,ADElC,AdqCJnB,AOjBQ,AgBhBZ,AJNiG,Ab8C7E,AJ1Bf,UFmBK,OcrCOmB,APoBAkC,IQtB8BxC,ADEvC,CAAcU,CPoBV,CDwBYsH,ECxBE,EOpBlB,CR4CY,CQ5CU,APoBAlH,CQtB2BP,AT+CjCL,IS/CuB,CAAeG,GT+C9B2H,ES/Ce,CAAL,ET+ClB,ECzBE,ADwBN,CCxBiB,ID2Bb7H,CC3BkBY,IAAhB,EAAsB,AD2BhB,KC3BqB7C,MAA3B,CAAd,MD2BqC6J,MAAO,UAAhC;ASjDgD,ADExCrH,AdsCxB,AOjBIyE,AYvBuF,Ab6CnF,AJxBZ3D,aarBgC,CAAqC,CfwC1D,IctCwBb,APqBpBoI,ALFAtH,CFmBCtD,CexC4DqC,CAAP,CDEzC,ARiDZL,CSnD+D,CfwCpE,CctC+BD,AdsCpBd,GEnBG,CFmBd,AMWYiF,AJ9BvB,CKEQ,CPiBJ,AEnBwB,CI8BZ,CQjDkC3D,APqBpByE,OOrB2B9E,APqBpB0I,KOrBK,CAAd,GAAsC,GPqBpC,COrBwChJ,APqBpBgC,COrBgB,CAAM,CPqB1C,CAAyBiH,KAAD,GOrB4B9I,CPqBjB,MOrBO,EAAmB;ACFVC,ADEYD,AduC5F,AOjBW,AgBjBhB,AJNQ,AbmDK,AJ9BLuB,aIsBI,Ia3CKhB,CjBqBCgB,EKEE,GQxBwEjB,CAAP,ADEoBE,CDFhGoJ,AMCD,AjBqBA,CiBrBkBzJ,CZuBC2I,IOtBqF3I,AKDxG,CZuBY,CYvBa,GLCgE,AQJxF6R,Cf0B4B,QAArB,EAA+B;AQxBkD,ADEwB,AdwCrH7S,AOjBgB,Ac3BpB,AFGmC,AboD1B,AJ9BD,ImBzBJO,Kf6CW,CAAP,EJpBI,CYrB0D,AdwCzD,EcxC8GgB,COJ1G,AFGsB,CjBsBtBc,EYrBqD,CAA0DtB,OPuBrG6I,EOvB2C,AOJ7C,EPIkHxI,AZqB/H,CKEoByI,ALFAzH,OYrBsC,AOJxC7B,AnByBlB,CYrBoB,AZqBxB,CKEmB,CAAeoJ,ALFA,KKEf,CAAP,Ac3BJ,IAA4B,UAAUnJ,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;ANEU,ADEoD,AdyC/I,AOjBS,Ac3Bb,AEDJ,AJGyCM,AbqDpC,AmBxDL,AvB0BY,IqB1BRV,EEAE6U,KJCK,IrB4CI,CqB5CC1U,AEDC,AEAD2F,GvB0BG,CFmBCtH,CmB1C0B4B,CEFxBD,CrB4Cd,CyB7CgB,AvB0BAyB,EmBzBEvB,GEDD,EJG+B,EEFxC,CAAL,EAAyB,EFEU,AjBuB3B,CqB1BWL,ArB0BS6B,CiBvB0BpB,CMHjD,EAA2BoU,ENGG,CEFAvU,AFEL,EIHzB,CrB0BiC,CuB1BjD,AvB0BmB,CAAP,CqB1BgC,CFCR,EAAmBC,MAAnB,CEDkBN,CFCS,MEDnB,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;ARGjF,ADEAM,AdyCH,AOjBW,Ac3BR,AEDJ,AJEuE,AbsDvE2H,AJ9BK,SAFD,EqBxBG,ETIE,AKFsB,CLErBjI,AKF8D,CjByB/D,CqB3BGD,CRECU,AMDAL,CIDFqU,GNEoEjU,CIF7DT,AJEsD,CZ0BrDiJ,CY1B+D,AbsD9D,CStDhB,CAAkB3I,ADEAL,AOHlB,AEDkBC,CFCCI,Cd2BX,GQ1BR,CMDA,CNCyB,AQFjB,CFCkB,AEDvB,ETIyBQ,ASJA,KTIV,CAAgBhB,ISJIK,GTIpB,EAAyBJ,ESJf,EAAmBK,MAAnB,EAA2B,ETIE,EAAvC,CAAb,EAAyDI,IAAzD,EAAL;ACF2B,ADG9B,AdyCDjB,AOjBS,Ac5BuB,AEA5B,AJCgFa,AbuDhF,AJ7BI,KY5BD,CAAP,OPwB8B,CPsBpB,AOtBF,CDiCG,CSvDwB,AMDC,CEAvBC,EjBwDEH,AJ7BAwB,IiB1B4EjB,CAAP,EIDhF,AjBwDO,AJ7BH,CqB3BeH,AjBwDCH,KiBxDpB,EAA0B,AjBwDP,IAAa,KkB1D/BR;ATGgCY,ADIxC,AdyCO,AOjBI,Ac7B8BA,AEAN,AJCgE,AOKpG,ApBmDY,AJ7BH,CY9BT,WdgDY,IOjBI,AgB7BwB,CvB8CvBnB,AMWA4B,GNXL,Ce7CkCf,AR4BzB2I,Ac7B0B3I,AfyDnC,CAAUkI,KNXK,CAAnB,EACI,Ce9C4C,AMDC3H,IAAV,CAAeF,CrB+C3C,AMUP,CSxDkC,ATwDR8H,ESxD2B9H,Cf8CrD,AqB/CmC,CAAL,GNCI,CAAL,AR4B7B,CD4BA,CC5BoC,AD4BA;ASxD2B,Af+CnE,AOlBQ,Ac9BwD,AEA9BC,AJC4D,AbyDtF8H,AJ7BX,aa5B8B,AMDC,CNCwC,AMDH,CrBgD1D,KAAP,Ce/C2E5H,AR6B9DgC,Ac9B2DhC,AEAjCR,CRC6B,AMDH,ENCa,AMDH,Cf0D1D,EC5BT,CAAYsD,ED2BoB,CiBzDS/C,IAAV,CAAeF,KAAf,CAAL,ChB8B1B,CAA4B8E,OAAO4D,YAAnC;AQ7BwE5I,ADMxF,Ad0CK,AOlBQ,Ac/BwEA,AEAb,AJEhE,AbyDQkI,AJ7BZ1G,aKDQ,AgB7BwB,CAAqC,GJExDrB,EZ8BA,CD2BG,CiB3D4DE,AJExE,AbuDwC,CiBzDyB,AJEnDE,AjB4BA,Ca7ByEF,AMDHA,CNCJ,AMDH,AEAF,IJE3E,EAAsB;AJDsE,AfiDhGjB,AOjBY,AcjCiF,AEAZY,AJErDO,AQIhC,ArBsDgB4H,AJ7BR,cAAM1G,KFmBK,AmBhDoBjB,EZ+BlB6B,ALFAX,EqB/BuErB,AJE5D,CIFqD,AjB4D7D,Ea1DsBN,CZ+B9B,CAAY0D,ALFAhC,IAAP,CAAY,CiB7BqBlB,CZ+BtC,CAAoByE,CLFf,CAAb,GiB7BqD9E,EZ+BlB0I,ADwBK,GavDF,CAAd,GAAsC,IAAIhJ,CZ+B1D,AY/BsD,CAAM,CZ+BnBoF,OAAOhC,EY/BsBjD,MZ+BtE,CY/B4D,EAAmB;AJDO,AfkD9F,AOjBK,AclCsF,AEAF,AJEAA,AOKjG,ApBsDgBiF,AJ7BR,aFmBK/G,CEnBC0D,EFmBN,CAAStC,OAAT,AmBjDiGkB,Ab2DjF,AJ7BAkB,CFmBEnC,IElBbsC,EiB/BmG1B,CjB8BxF,CACN2B,GiB/B+E,AjB+BhF,IAASC,CFkBD,IAAsB,IElBZD,GAAT,EAAc,EAAd,CADF,EAEXE,MAFW,CAEHC,CAAD,IAAOA,IAAI,IAFP,EAGXC,KAHW,CAGL,CAHK,EAGF,KAAKpB,MAHH,CAAhB;Aa9BA,AfkDI,AOjBH,AclCD,AED2F,AJEsB,AbuDzE,AJrBxC,SKjBA,IYjB8D,AbuD1D,ECrBC,AYlC8GJ,Ab4D3GyD,AJ1BDvC,CFgBC,CelDCxB,AMDAG,Cf6DF,Ca5DuD,CAA0DL,CJAxH,AfkDazB,CelDC+B,AT4DE,AJ1BhB,EFgBQ,CAASjB,AqBnDjB,CAAkBY,ENClB,CIA8D,CJAxC,CMDtB,AFCmII,EED1G,MFCqC,CAAtC,CnBkDhB,EAA2B,CAA3B,MAAkC,EAAtC,EAA0C;AelDtBC,AfmDhB,AOhBJ,AcpCuB,AEA3B,AJC+I,AOMvJ,ApBuDgB,AJ1BX,gBmBpCkC,CdoCtB8B,AgBpCA/B,ERCsBE,CT6DnB0D,GS7DY,ARmCpB,EgBpCJ,CRCsCnE,ARmCpB,AgBpCAG,EjB8DE,EC1BhB,CgBpCJ,CjB8DQ,CiB9DiB,CRCqBK,AT6DpB,OS7D2BL,KAAf,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,AfoDjF,AOhBP,AcrCgCI,AEAN,AJE3BA,Ab6DYJ,AJ1BhBmC,WAAOC,EiBnCE,CAACtC,EIFyB,KvBqDlBhB,AqBrDyBgB,CnBqC1C,EapCqGU,AfoDzF,AEhBQ,CFgBCjB,CmBnDCO,Eb6DE,GS9DoFK,AMDxD,Ef+DpC,GS9D6E,AIC7DQ,EEFU,EAAmBR,CrBqDjD,AmBnDU,CAAgBR,GEFI,CAAL,GFEf,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;AJDiH,AfqD5G,AOhBL,ActCmE,AEAlCD,AJGpC,Ab6DY,AJ1BT,KiBxCG,CAAP,OJGkE,ARqCzD6I,ActCsB,AnBsCtB,CmBtC+D,CNC+CvI,EbqC1G2B,EarCqD,CAA0DnC,ARqCxH,CctC2EI,AEArCR,ArBsCzB,CmBtCuD,AnBsCpE,CKAemF,CctC+D,AnBsC9D5C,IAAID,CarC0C,CRqCxC6G,CQrC6G1I,AQDnF,MhBsChD,CgBtCsC,CRCwB,AbqC9D,CarCwB,AQDiCJ,CrBsCxBkC,GAAjC,CqBtCsC,CAAL,ArBsCK;AarCyG,AfsD9I,AOhBD,AcvCgFpC,AEAb,AJI1E,AQPD,ArBoEgBD,AJ1BJ,CiB1CZ,GQAIN,K3BqDI,IOXKwJ,AgBvCsB,CAAyC,EIH3D,CpB0CT,CLAU5G,EKAE,AqB1CX4S,CLG0E5U,CAAP,CFAmBA,CduCvE8G,AcvCgE,AEAF,AjBiE9D,GJ1BG3H,CI0BX,CqBpES,QzB0CY8C,CKAjB,CAAW,AoB1CD7C,KpB0CMmB,CLAT,EAAf,CKAQ,AoB1CJ,CpB0CR,GoB1CoC,UAAUlB,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AZKjFM,AfsDH,AOhBG,AcxC4F,AEAZH,AIFpF,ADUJ,ApB0Da,AJ1BD,WyB1CD,EZIE,ARsCAkJ,ADgBD,CStDErJ,EYJED,CzB0CC2C,CiBlCF,EjBkCH,CAASF,CyB1CCzC,CJEyES,CAAP,AJMnE,EJJKR,AYJAC,CzB0Cd,EKAJ,GAAwBkF,CoB1ChB,CAAL,EZIyBtE,AYJA,GpB0CGwI,EQtCb,CAAgBxJ,IYJIK,GZIpB,EAAyBJ,EYJf,EpB0C5B,AoB1C+CK,MAAnB,EAA2B,EZIE,EAAvC,CAAb,EAAyDI,IAAzD,EAAL;AACH,ADYL,AdhB2B,AO0CtB,AczCiG,AEAF,AJOhG,AQRI,ArBoEC,AJ1BA,Ka3CE,CAAP,ADiBEwJ,GRwCS,CAAP,OqBxDS3J,SbgBS,AahBlB,CbgBmB4J,AahBA3J,IbgBD,CahBlB,CbgByB4J,CahBC,QbgBR,EAAkB7G,IAAlB,KAA2BxD,UAAU,KAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;ACXjG,ADYGwD,APfwB,AcApB,AED8F,AIDlE,ArBqE/B,AJ1BG,Ca7CR,QDmBS8G,MZ0BM,CyB3CyB,CNEvB5J,CrBFItC,CE2Cb,EmBzCA,CPeJ,AOfkB0C,GPeG0C,Ad0CzB,GqBzDQ,EPesB8G,AOfA,aPeL,KAAuBrL,SAAvB,GAAmC,IAAnC,GAA0CuE,KAAK8G,aAApE;ACRG,ADSH,Ad0CJ,AqB1DgCxJ,AEAxB,AIFkCJ,ArBFd,AJ8CvB,SanCW6K,CDSNrC,OShBOxI,ChBAIiI,CcAkB5H,EPgBlBqJ,AShBb,AIFuChK,CJEzBU,CROf,AMPyB,CNODU,EDSLL,AOhBoBb,EEAtC,ETgBa,AShBS,CROvB,ADSwBgI,AalB0B3H,EZSjB,CMPcG,CMFP,CAAeL,KNEDA,AMFd,CAAL,IbkBtC,AOhB0C,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;ANQ3F,ADSA,Ad0CJ,AqB3DiGA,AEAjEQ,AIFwC,ADUxE,AxBmCIgC,QAAIF,GanCI,ADSD,EanByB,CZUtBpB,AYV2D,AzB6CrE,CY1BWnB,CZ0BC,EI/CKqH,CiBIkB3G,EIFyCH,CZU1D4B,ADSX,AanB8D,CbmBlD,ASjBS,CTiBRlC,AOjBiFQ,AMFtB,EJErCR,CRQhC,CAAc,CAAd,EAAiB,ADSR,AOjByFG,CNQlG,CAAoB,ADSDF,CSjBqBO,EFA2C,GNQ1DU,ADShB,ESjBsCf,GTiBjB,ESjBE,CRQC+B,AQRf,GAAsC,ERQ/B,CAAchB,CQRqBrB,CAAJ,CAAM,KRQfiB,KQRyBd,CRQjC,GAAiB,CAA/B,EAAkCkB,AQRG,EAAmB,MRQdJ,MAA1C,CAAkD,EAArF;AACH,ADSO8H,Ad0CR,AqB5DyH,AEAxB5I,AIFZC,AzB8C7E,YAAI,CmB5C0D,AnB4CzD,EmB5C8GS,EPkB1GuH,CZ0BC3F,CmB5CoD,CAA0DpC,GMFpCI,CJEaE,AIFpB,CzB8C5DiC,CY1BjB,CAAmB,EOlB2C,EAAqElC,AEA3BJ,KAAf,GFA3B,CAAtC,CnB4Cd,EAAL,CAAL,EAAsC;AalC/B,ADSH+H,Ad0CZ,AqB7DuJ,AEA9B,AIFxB,AzB+CrF,ManCSgD,OAAN,AQVuD,CRUzC,CQV8FxK,GrB6CzGgC,CqB7CoD,CAA0DxC,CTmB3G,GZ0BG,EY3BG,GSlB2C,ArB6CzCoB,EqB7C8Gf,QAArE,CAAtC,GrB6CR,EAAZ;AalCRxC,ADSQqK,Ad0CZ,AqB7DQhI,AED+I,AIFpD,AzBgDvFkC,amB7CC,CAACxC,ENUEqL,GbmCGxI,CY1BC,ECThB,EAAoB,AbmCZ,EmB7Cc7C,CnB6CC4C,GAAf,MmB7CwB/B,KAAV,CAAgBhB,MPiBf,COjBD,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;ANWA,ADSI4E,Ad0CZ,AqB7DK,AEDG7E,AJYJrC,AQdI,AzBgDI,KmBlDD,CAAP,ONeSoN,AQXA,CAACrL,EJYEqL,CQdC5K,AzBgDAmC,EanCT,CDSY,AZ0BR,EanCUyI,ADMK,AKLvB,EAAoBsC,AjBkCAnL,CyBhDhB,CJEkBxC,AIFAK,EZalB,EICJ,AjBkCQ,CyBhDJ,CRcwB,CQdC,GJEGQ,KAAV,CAAgBhB,OAAhB,EAAyBC,cAAc,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;ARYH,ADSO8H,Ad0CZ,AqB7DC,AEDI,AJYG,AQf2B,AzBiDvB,CmBpDZ,IECW,CAAP,OJiBSuF,GLQG,AavBuB,CzBiDtBpL,GiBlCT,GAAe,CjBkCCG,gBAAP,EAAL,IAAkCH,MAAlC;AalCR8I,ADIuB,Ad+C3B,AuB9DC,AJYWuC,AQhB6BvN,ADHzC,AxBqDY,CqBrDZ,GGAIV,KZsBI,CCJEqK,CDSC,CAAC5F,GAAD,CY3BM,CZ2BAC,AZ0BA9B,EanCb,CDSO,CCTU,AYfyBxC,GzBkDtB2C,CY1BC/C,GKRG,COnBH,ECG+B,IbwBrB,GaxBW,CbwBrB,AY3BKA,CCGmCS,AzBkDhD,CY1BwB,EZ0BEyC,EyBlDG,CbwBA,AaxBL,CbwBhB,CY3BT,CZ2BiC,GY3BL,EZ2BU,AZ0BrC,CY1BQ,CZ0Bb,CY1B6C,GZ0BGN,EwBrDN3C,IxBqD1C,GwBrDgC,CZ2B0B,CY3BPC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AXmBjF,ADSI,Ad0CZ,AqB7DA,AECO,AJUS8N,AQjB2D,ADFvE,AxBqDQ,MqB5CCwE,KGTF,ECEwB,CAAyC,CZgB7D1S,CDSCyE,AY3BAtE,CxBqDCiB,EY1BL,ASlBL,CAAoB,CTmBXb,Aa1BmEK,CAAP,ADFtDT,CxBqDV,CyBnD0E,CZgB7D,CWlBCE,EZ4BHoE,CCVR,AICc,CAAC,CJDC,ADUf,AKVY,EOlBZ,CAAL,EXkByB,AWlBA,CXkBrB,EAAwB,KAAK,CAA7B,CWlB+BnE,CXkBC,MWlBX,EAAmBC,KXkBK,CWlBxB,EAA2B;AXmBnD,ADUA,AKTI4N,AQlBwE5N,ADDhF,AxBqDI,QqB7CCmS,SToBI,AY5BAlS,CXkBCmL,CbmCC/I,IYzBI2H,Aa3BwE3J,CJOlF8R,AIP2E,CzBoD5E,CwBrDJ,CAAmBjS,CZ4Bf,IAAoBiE,AY5BxB,CPmByB,CAAC,AOnBA,EXkBE2F,ADUAvJ,MAAxB,EAAgC,ECVE6K,eAAlC;AACA,ADUI,ASnBhB+G,AJO4B,AQhBwE,ADDhE,AxBsD3B,aiBtCc,CINTC,EGV0B,GHUxC,CTmBoBjO,ESnBE,CAAtB,CTmBwB5D,MAAJ,CAAWyJ,KAAX,EAAkB/E,EAAlB,KAAyB6E,UAAU7I,OAAvC,EAAgD;ACTpD,ADUQ,ASnBpBkR,AJUYtE,AQpB0F,ADD5D1N,AxBuDlC,cqB5CMkS,CrB4CC,GanCGhH,EbmCEhJ,CwBvD2BxC,EHW/C,EJUyB,CLSCoK,ASnBA,CAA1B,ArB4C2BzH,GanCGsH,CWpB2B1J,IAAV,CAAeF,IXoBtBmL,CWpBO,CAAL,CxBuDtB,EAAL,CYzB+BlH,AZyBtC,GanCI,CDUsC5D,MAAJ,CAAWyJ,KAAX,MAAsB,CAAC/G,KAAK8G,aAAN,KAAwB,MAAMG,iBAAiBL,KAAKjJ,IAAtB,EAA4BuD,IAAI5D,MAAJ,CAAWyJ,KAAX,CAA5B,EAA+C/G,KAAKkH,UAApD,CAA9B,CAAtB,CAA1B;ACTR,ADUQ,ASnBL,AJUCwD,AQpBR,ADFgE,AxBwDnE,MqB5CgB2E,MAAN,CAAa,AGZQ,CAAqC,GCExDnS,IAAT,ADFwEE,CCE1DE,ADFmD,EZ+BjD4D,AY/B2D,IZ+BvD5D,Aa7BpB,CRoBqB,CAAC,AQpBA,CRmBL,GLUD,CAAWyJ,KAAX,KAAqBI,SAASjG,IAAI5D,MAAJ,CAAWyJ,KAAX,CAAT,EAA4B/G,KAAKoH,IAAjC,CAArB,IAA+DJ,iBAAnE,EAAsF;ACT9F,ADUYlK,ASnBpBjC,AJUY8P,AQrBgBrN,ADFqDP,AxByDjF4C,OAAGC,SqB5CSqI,ERSEI,CYpBqB9K,EzBuDnC,CqB5CA,CIX4B,ADF4DH,AxByDrE,CqB5CCkS,AGb6D,ECEvCxS,KJW1C,CRS4B,ADUA,CSnBC,AJUA,CAAC,AQrBoBQ,Eb8B9B,ECVZ,GYpBiDL,KAAf,CAAd,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AZqBnF,ADUS,AOpBrB,AECQ,AJOiB,AQnBwEA,ADFA,AxB0DzF,MmB7CFkR,OECOuB,CrB4CCnQ,IanCIY,KbmCK,CyBxDkF1C,CZqBhF,CMVC,CAACuJ,CECnB,ArB4CoBjH,GqB5CG,AIZiF3C,EJYxG,GFDkB,AMXuE,ENW3DgJ,InB6Cf,CAAf,WmB7CkB,KAAiC;ANW3CjE,ADUC,AOpBb,AECI,AJCe,AQdkG,ADFtB,AxB2D3F,SiB3CA,CEFEmG,EnB6CE/I,CqB5CCoQ,AIbyD,EAAqDhS,IAArD,CZsBlDqJ,AYtB4G7J,EzByD1GoC,EqB5Cd,GAAmB,CFDCyH,CECpB,AIb8D,AzByDzCtH,CanCCvB,CYtB6GX,MZqBlH,CMTa8K,CMZgC,CAAtC,KzByDV,EAAd,EAAyC,ImB7C7C;ANWYlL,ADUH,AOpBT,AECI,AJUA,AQxB+I,ADD/I,AxB2DI,UmB7CFgR,GECGqB,AJUAzE,IOzBIxN,ExB2DE,CqB5CX,GRSe8K,AMVAlC,AECAqJ,CrB4CClQ,CwB3DhB,CPyBA,AOzBkBnC,GPyBG,CIVrB,CJUA,AOzBA,AxB2DuBsC,EwB3DE,KXsBR,EMRe0O,OnB6ChB,EAAL,CmB7Cf,AnB6CQ;AalCIhM,ADUJnF,AOpBR,AECI,AJUA,AQxBAI,ADF2B,AxB4DvB,WmB7CDiL,EECEF,AJUAA,AQxBA,CAACrL,EDFyB,GHgB/B,AJUA,AjBkCW,CYzBC,CCVCyL,CQTCJ,AJUAA,EjBkCE7I,CYzBZ,CajCcxC,CNaCsR,CECnB,AJUA,CEXG,CAAmBD,CnB6CC1O,CatCN,IYpBW9B,INazB,CAAP,AMbsB,CAAgBhB,KzB0DlB,EyB1DE,CzB0DwBiD,CyB1DChD,UzB0D3B,EAAL,CAAP,CyB1DqD,EAAvC,CAAb,EAAyDS,IAAzD,EAAL;AZwBQgF,ADUP,AOpBR,AECO,AJUA,AQxBH,ADHoCjF,AxB6D7B,CmBjDZ,IMdW,CAAP,Gb0BqB,CALjB,GSFK8I,AJUAA,IIVL,AJUA,EjBkCW,CqB5CCiC,AJUAA,CO3B0BrL,GxB6DtBwC,EanCE,CQTC4G,AJUAA,IIVnB,AJUA,AO3BgD,AxB6DzBvG,CanCC,IbmCb,CanCkBwI,AbmCzB,CwB7DkC,EAAmBhL,GX0BjC,CAAY+I,CW1BE,CAAL,EX0BT,CAAiB3B,eAAjB,EAJP;AAKTjC,ADUX,AOpBL,AECQ,AJUA,AQxBP,ADJ0E,AxB8D/D,CyBjEZ,IbqBW,CAAP,OSASoN,AJUA1E,AO5BsB,CAAyC,GxB8D3DlN,IiBlCT,AO5B2ER,CX2B7DgL,AW3BsD,CxB8DhE,CqB5CJ,AJUgB,AO5B8D,CHkB7D3B,IJUjB,WIV0BgJ,iBAA1B,IAA+C,KAAK3D,iBAAL,CAAuBe,IAAvB,CAA4B,IAA5B,CAA/C;ARIiB,ADgBxB,ASnBO,AJUA,AO7BgF9P,AxB+D5E,CYhDyC,CAArD,WCOY,AQHCyS,AJUAjF,MAAL,AjBkCW,GiBlCGA,CO7ByEnN,AxB+DnF,CqB5CJ,AGnBgF,CHmB/DqJ,GJUjB,YIV0BiJ,WAA1B,IAAyC,KAAKC,WAAL,CAAiB9C,IAAjB,CAAsB,IAAtB,CAAzC;ARUI,ADUZ,ASnBQ,AJUA,AQxBR,ADNoG,AxBgE3F,aqB5CI2C,AJUAzE,GJDG,MAAM,EQTd,CAAiBtE,EJUjB,GAAsBwB,OAAOzC,GIVHoK,AJUJ,CAAW7E,IJDR,KAAK9C,EQT9B,GJUsB,CJDR,AQT4B,CJU1C,CJDsCpB,GQTSgJ,MRSjC,EAAmC,EAAEzI,EQTT,CAAkByF,GRSH,CQTf,CAAuB,IAAvB,CRSO,AQTjD,ERSc,CAAV,EAAiE;AAC7D,AQTR,AJUH,AQxBE,ADP+F,AxBiE9F,MyB1DKmF,OJcAxC,AIdN,CAAc,CzB0DN,KAAP,GanCe,CQTf,CAAiB/I,eAASqJ,eAA1B,IAA6C,KAAKC,eAAL,CAAqBlD,IAArB,CAA0B,IAA1B,CAA7C;ARUY9J,AQTZ,AJUJiI,AQxBAnQ,ADPI,AxBiEH,aqB5CQ2U,GIdG7R,CDPCT,GCOb,CDPI,CP+Bc+N,AQxBAgH,ADPA3U,EHqBd,AJUJ,AQxBA,CJcqBmJ,CJUCyE,AQxBA,EZuBE,AW9BpB,EAAsB,IP+B1B,EAAgC,IIVF8E,QAA1B,IAAsC,KAAKC,QAAL,CAAcpD,IAAd,CAAmB,IAAnB,CAAtC;ARQe,AMRvB,AECQ,AJUA,AQxBA,ADRwBvP,AxBkE5BuC,MmB7CEsO,MnB6CM,CqB5CCqB,AIdAyC,ERwBEzV,AQxBP,EZqBQ,CYrBEyV,CDRqB1U,CCQ/B,GDRwB,CHsBxB,CAAiBkJ,AJUA,COhCqB3J,GPgC/B,EEXgB,AFWA,CEXCmJ,EKrBsB3I,EPgClB,CAArB,EAAwB,CIVL4S,CGtB2BjT,GPgCjB,CAA7B,CIVP,AGtBsC,CPgCC,AOhCf,CLqBD,EAAmBgL,AECN,AGtB0B,IAAItL,CHsBzBwT,AGtBqB,CLqBvC,AKrB6C,IPgChB,CEXC3T,AECjB,CAAYqQ,IAAZ,AGtB0C/P,CHsBzB,IFDU,AEC3B,CAApC,CGtBoE,EAAmB,CLqBlC,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;ANW7F,AMVT,AECI,AJUI,AQxBJ,ADTyFA,AxBmEzF,UmB7CEsR,GECGoB,AIdA7R,CzB0DCe,GyB1DN,CRwBUyM,EQxBExN,GNaGsI,CECf,AIdA,ADTiG3I,AxBmEjF,CqB5CCmJ,GJUG,CjBkCClI,EwBnEmFtB,GPiC9ET,EOjC+D,ILsBzD4R,AECNgC,IAA1B,AJUoC,AjBkCpB,EAAhB,EqB5CmCvJ,AJUT,EEX9B,AFW8C,KAAK,CAArB,CIVQ,CJUgB,GIVD,EJUM,CAA7B,EAAgC,aAAa;AJAnE,AMVR,AECQ,AJUI,AQxBR,ADViH,AxBoEjHnI,UmB7CE2P,GMbG7I,ADVyD,EAAqDhI,CXiC3G,AYvBR,AzB0DQpB,CqB5CC6L,EIdE3F,ADVmD,CPkClD,AOlC4GtF,CXiC3GiL,EQTT,ArB4CJ,CqB5CgBnN,ArB4CC0E,GanCT,AMVW,AMbA,AzB0DH,CanCIJ,CWjC0C,CHwB1D,CAAmB0D,AGxB4GzF,AxBoE1G,EmB7CA0Q,CNUjB,CAAmBnL,AQTvB,CFDwB0L,AECC,GIdlB,ADVmD,CHwB9BzH,AGxBR,CCUSlJ,IAAtB,CAAX,ENayB,CAAiB4Q,CECAvQ,ERSlC,EAAJ,EAA4C,CMVP,AECS,IFDKiK,OAAOtK,IAAP,CAAYO,GAAZ,CAAgBC,UAAhB,CAA2B8J,KEC9E,EFDqF7I,MAAP,CAAcgE,YAAd,GAA6B,CAA7B,CAA3B,EAA4DmL,QAA5D,CAA9B,CAA7B;ANWY,AMVZ,AECQ,AJUQ,AQxBZ,ADX+I,AxBqE3I,WmB7CDF,GMbG6D,GJcGjK,ArB4CAtI,EAAL,CanCQ,AbmCAH,GqB5CR,ArB4CA,CqB5CYzE,EFDEmT,AFWAjD,EEXf,CAAkBmD,AECjB,AIdiB,CJcCxS,AJUV,GIVR,CAAsBiL,AIdAoL,EAAL,CAAQE,ENa1B,CAAP,IECwCnU,MIdf,CJcjB,AIduC,OAAtB,CAArB;AZwBY,AMVnB,AECW,AJUK,AQxBT,ADXAd,AxBqEC,CmBjDoD,CAA7D,OnB+CQ,IyBxDKkV,ADXA,CAACxV,GPiCE,CAGA,AQzBR,CJcW6J,EIbPyL,IRwBW9U,CAAP,AOpCUR,EPoCA,MIXEwT,EGzBQ3S,EHyBxB,AIbiB,GDZH,CCYd,ADZ8BhB,GCYNyV,IDZV,EAAyBxV,MCYvC,GAAuC,KAAKuV,ADZS,ECYd,ADZzB,CCYiCI,ADZ9C,EAAyDlV,IAAzD,EAAL,KCY2C,CAAsB,OAAtB,CAD3C;AZsBY,AMRpB,AECS,AJWW,AQxBf,ADZA,AxBqEG,KwB1EG,CAAP,GH0BI,MrBgDO,IAAP,MiBjCiB8K,MJF6B,AIElC,CAAYnN,KJF4B,CIExC,CAAmBoI,GJF0B+E,EIE7C,CAAyB7K,CAAzB,EJFwC,CAAYgC,MAAZ,CAAmBwB,YAAnB,CAAgCZ,IAAhC,CAFxC;ADapB,ASnBK,AJWY,AQxBb,ADZH,AxBqEI,CwB5EL,KZmDMqH,kBAAkB,CAACT,IAAD,EAAOC,SAAP,EAAkB7G,IAAlB,KAA2B;ACb/B,ADchBA,ASnBA8L,AJWS,AQxBT2F,ADPW,AxBgEX3R,MwBhEiBwR,GZuCZxK,GZyBG/G,CiBxCsB,CAAtB,AOxBG,CCOAmR,ADPe,KxBgE1B,EYzBA,ASnBkBrK,ArB4CA7G,CyBzDlB,EbgCqBA,AahCA,CZoBG4B,AbqCxB,EAAwB,EYzBEkF,CSnB1B,ERKgB,AQLa,QROLlF,EDYH,KCdL,ADc4BnG,SAAvB,GAAmC,IAAnC,GAA0CuE,KAAK8G,aAApE;ACdgB,ADehB,ASnBI,AJWI,AQxBJoK,ADPJrW,AxBgEI,UYzBE6K,IZyBIhH,CqB5CClC,CGpBCyL,CCOC7L,CRwBC+O,GLQGvE,CYvCjB,ECOI,ADPgB,AxBgEA,CqB5CC,AIbC7F,CZmBWR,ADaX5C,CKRd,EIXG,ArB4CcY,CaxCT,ADeC,CAAUuG,ASnBA,CIbN,IJaW,AIbEtI,CJavB,CRMsB+D,CQNE,GRInB,EQJwB,ArB4CpB,CqB5CT,CTmBX,AahC4C,AzByDxC,CqB5CuC,GIbT,EAAgB,KAAK,CAArB,EJasB,AIbE,KAAK,CAA7B,EAAgC,aAAa;AZiB/D,ADgBhB,ASnBQ,AJWA,AQxBA,ADPJ,AxBgEA,WYzBG,EYvCE+O,EZuCEzS,AZyBA6B,CqB5CCmI,EIbEyL,CRwBClH,CO/BX,EZuCG,CAAY,AYvCA,AxBgEAzM,CYzBC7B,ECdmBiG,AQLjB+G,AIbA,AzByDX,CwBhEY9B,AxBgECxI,GAAD,CYzBJ,AKRQ2L,AQxBAiH,CZgBX,CDgBarV,CZyBG,EyBzDV,CJad,AIbyBwV,CRwBlB,CLQI,ASnBgB,ArB4CE/S,CavCEuD,AIMHmI,CQxBd,CAAgB,AzByDN,EYzBQ,AahCAnK,ADPrB,AxBgEuBd,CwBhEXgI,CXuBf,EIQD,AjBiCiB,CiBjCxB,AjBiCuClI,EyBzDT,ADPnB,CAAf,CCOkB,EAA6B,CAA7B,CAAd,AzByDwB,EAAyBC,IAAzB,CAArB,CAAP;AatCY,ADcZ0F,ASnBQ,AJWP,AQxBG,ADPJ,AxBgEH,SiB5CU,CAAP,GOpBKuC,GCOGqK,CbgCChL,EYvCT,EZuCA,AahCI,CbgCU,AYvCAW,CCOC,KDPf;AZwCIjD,AOpBZ,AECgB,AJWX,AQxBW,ADPR,AxBgEJ9E,MmB7CEsO,OKnBOjE,MAAL,CxBgEYpK,CYzBC,AOpBA,CAAC0G,AMZA2L,ADPA,CHoBC/L,GTkBD,AYtCI4I,KLmBL,AnB6CjB,EmB7C6BpJ,AMZAqM,AzByDA,KqB5CDtC,CIbOwC,GDPjB,CAAW,GHoBjB,CIbiB,CDPKvK,CLmBjB,EMZ8B,CAAnC,ENYsCzL,AKnBhC,EAAwB,KAAK8S,GLmBa,IKnB1C,CLmBgC,AKnB9C,ELmB8D,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;ANM/E,ADeRpK,AOpBR,AECS,AJWTmG,AQxBY,ADPR,AxBgEAlL,UmB7CEsO,EFYE,CO/BC8C,OZuCO,AYvCZ,AxBgEYnV,EyBzDEqW,CDPC,CXwBC1P,GWxBGyO,AxBgEnB,CmB7CoB,AnB6CCpR,EaxCT,AYjBUkS,EZiBE,EMLEzL,EPkBZ,Aa9Bc4L,EzByDR,GyBzDE,CzByDc,EmB7CA/D,AKnBrB,CCOsB,ADPV,CCOnB,IDPwBzG,MAAjB,EAAyB,KAAKsC,CLmBnB,EAA9B,GKnBmB,CAAf;AXyBgB,ADeZxI,AOpBR,AECQ,AJWJ,AQxBQuQ,ADPR,AxBgEI,UmB7CF3D,GKnBG1G,EP+BEzL,CIXC,ErB4CE4C,CmB7CCyH,AKnBX,CZuCY,AYvCAd,EZoCE,AShBAc,AIbA2L,GRwBG,EO/BjB,AxBgEmBjW,CwBhECkV,CLmBClI,AFYd,CQxBC,CRwBe,CIXCuC,CIbC,ENYd,CAAiB5C,AFYA,CAArB,AQxBsBV,AzByDAnI,CwBhE7B,CP+B+B,AO/BA,ELmBpB,CAAuBoO,EFYE,AO/BAxG,CP+B7B,EAAgC,EIXzB,CGpBiB,CHoB3B,AGpBuC7I,AxBgExB,CAAyBkB,CqB5CC,GIbpB,CNYd,AMZ4BkS,ADPR,CLmBnC,AKnBsDpP,CxBgEC7C,CiBjCC,GjBiCR,CAAYH,CyBzD/B,CAAjB,IDPuB,EAA/B,ExBgE4C,EAAwB,KAAxB,CAAzB,CAAf;AavCS,ADeT6E,AOpBR,AECY,AJWJ,AQxBIqN,ADPR,AxBgEI,UmB7CF1D,GKnBG8C,GZuCG,AKRA,AjBiCAtS,MiBjCM,AQxBAqT,AzByDV,CqB5CWhM,CrB4CC,GiBjCGT,AQxBX,ADPR,ELmBqBC,CMZC,CRwBR,CAAUpB,EQxBE2D,IJaFiH,QFDcb,GFYxB,EAAV,EAAyC,AQxBvB,CAAc6D,CJa5B,IIbc,CAAd,ENYZ;ANMgB,ADUE,AOflB,AECS,AJWG,AQxBH,ADPR,AxBgEW,QmB7CR7D,CPeA,EAKG,CAAC3N,CarCA,EbqCD,EAAMC,Ea/BA,Cb+BN,CZyBU5B,GaxCG,AbwCR,CYzBS9C,AOpBA0R,AnB6CA9O,EmB7CjB,CAAoB,CAApB,CAAJ,CnB6CY,CmB7CgB,GPoBG,KAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,UCfHwC,GDegB,KCfR2E,MAAtC,CAAJ,EAAmD;AAC/C,ADeZ,AOpBJ,AECI,AJWI,AQvBA,ADRZmL,AxBgES,A2BtFb,a3BoFY,EmB3CG/C,CPoBC1N,GAAJ,ASnBOwF,ArB6CF,EYzBD1J,AKTKkL,AQvBAmK,ADRA,CLmBCvD,EAAP,CAAUD,CMXT,CRuBA,AQvBW8D,CbgCJzR,AKTKnG,EJPE+L,CDgBd,EahCA,CJYY6I,AJWZ,AQvBkB,CRuBC5M,IAAnB,CJPwBwF,AIOA,CEZzB,CAAP,GECI,MRIkB,EAAN,KIOR;AJNQ,ADgBZ,AOrBP,AECI,AJWO,AQvBIvH,ADRZ,AxBiEQ,SqBtDD,CAAP,GGXKkH,IZwCI,EYxCT,CAAYnN,CP+BCwQ,CjBkCC,CYzBCvK,GYxCf,AxBiEkBrF,CyB1DQ,ADPPoH,GXwBGyF,ADgBlB,CYxCJ,AxBiEc,CwBjEU,AxBiEA,CiBlChB,CLSkBrH,EKTE,CJPC,CDgBC5D,GChBGkL,CIOC,ELSR,CAAWjB,CYxCrC,CP+BuCyD,KLSnC,EAA0C,MChBjB,AbyCf,CazC6BpJ,AbyCnC,GiBlC0B,CAAuB,IJPN6G,EIOY,KJPlC,AIOuC8C,EJPR7C,GAA/B,CAAmC,IAAIF,KIOL,EAA7B,EAAqD,IAAI,EAAJ,GAAS,CJPhC,CAAc3B,EIO5C,CAA1B,OJPgFzE,IAAV,CAAeuG,MAAf,CAAsBxG,QAApC,CAAnC,CAAb;AACA,ADgBR,AOrBZ,AECC,AJWQ,AQvBOmO,ADRZ,AxBiEK,WmB9CF,EFQC,AO3BCrI,ELmBT,IFaa,AOhCT,CAAYnN,CZwCC,KYxCb,CZwCmB+C,AYxCAiF,EXwBEmF,AYhBA,CAFK,CDN1B,CZwCQ,AYxCgB,GXwBR,CAAYlC,ADgBA7E,IAAI5D,GChBhB,CAAoBsL,EDgBR,AYxCU+I,CZwCCpK,OAAX,CAAmBxG,EChB/B,CAAkCR,IAAlC,ADgBY,CAApB,AYxCR,CXwBwDgI,CDgBC,GChBzC;AACA,ADgBJ,AOrBnB,AECGoH,AJYY,AQxBIM,ADRf,AxBiEI,CmBtD6C,CAAtD,OnB8CQ,OqBrCQpJ,QToBQ3F,CSpBpB,EAAuB,CToBC5D,EahCE,CZgBCuJ,AYnBG,GbmCV,CAAWU,MChBMsB,CDgBjB,CAAmB9H,OChBnB,ADgBA,EAA4BlD,KAA5B,EAAmCmE,EAAnC,KAA0C6E,UAAU7I,OAAxD,EAAiE;ACfhE,ADgBG,AOrBxB,AECQ,AJYQ,AQxBIwU,ADRhBZ,AxBiEC,A2B1FL,MR4CM9C,SECStS,EGpBE,IPgCIyL,CEbC,CAACpB,EECE,EJYT,CAAY/L,CIZb,CToBekM,AahCA,CJYC,CFDT,EAAYiB,AFalB,AQxBkBO,CRwBC1F,CIZC,CAArB,EAAwB,AJYvB,CEbM,AFakB,IIZI,CFDCtG,AEC9B,EAAgC,GToBG0E,GahCpB,CbgCwB5D,AahCV,CNWW,AMXzB,CAJI,GR4BlB,CLQkC,AOrBL,AECe,CToBCiK,COrBA,KAAK,CPqBhB,AOrBL,CPqBwBxG,COrBA,KAAK,CPqBxB,AOrBL,EPqBiClD,AOrBD,KPqB3B,MAAuC,CAACmC,COrBA,IPqBK8G,aAAN,KAAwB,MAAMG,iBAAiBL,KAAKjJ,IAAtB,EAA4BuD,IAAI5D,MAAJ,CAAWiK,OAAX,CAAmBxG,OAAnB,EAA4BlD,KAA5B,CAA5B,EAAgEmC,KAAKkH,UAArE,CAA9B,CAAvC,CAA1B;ACfJ,ADgBI,AOrBpB,AECQ,AJYI,AQxBIuL,ADRZ,AxBiEJjS,UmB9CMuO,EnB8CEtO,CwBjECwH,GHoBG,EAAE,CGpBV,CAAYtK,CPgCCsK,EEbE,CECCpB,AGpBhB,CAAiBwK,EXwBE,AIQX,AQxBW,CbgCCnQ,AKRApG,CEbC0T,CnB8CzB,CyBzD2BhG,CZgBX,ADgBYlL,AYxCxB,AxBiEwByC,CwBjEC8R,CHoBC9F,AJYlB,CAAmBjJ,GLQP,CAAWyE,AKRvB,CAAwB,AjBiCpC,EmB9CsCV,AnB8CA,CwBjElC,CAAoC,CAAC3D,CZwCjB,CAAmBnC,ASpBvB,EAAR,CAAJ,AIZe,ADRiB,CLmBf,AMXY,CJYW,AIZzB,ADRyBzD,CLmBC2K,AMhBnB,CbqCN,EAA4BpK,EYxCZ,ELmBgBoI,CPqBhC,EYxCmC,GZwCGkB,GKRlD,MLQ2DjG,COrB9C,CAAzB,EPqB2E5D,MAAJ,CAAWiK,OAAX,CAAmBxG,OAAnB,EAA4BlD,KAA5B,CAAT,EAA6CmC,KAAKoH,IAAlD,CAAtC,IAAiGJ,iBAArG,EAAwH;ACf/H,ADgBWlK,AOrBxB,AECY,AJYA,AQxBI6V,ADRR,AxBiEJlS,QmB9CA,CAACsO,OKnBO7L,CXUA,CAeA,CMNZ,EACI,AFYaoI,AOhCT,EHoBW7E,AGpBA,EXyBAvD,EbwCI9G,CmB7CZ,ENKC,EAAc,CMLtB,AFYQ,CjBiCR,CAA4BsE,CYzBA,AKRA,EIZJkP,EToBJ,EKRc,AQxBA,CzByDP,IiBjCY5E,AjBiCE,GqB7CjC,cJY0B,CAAuB,MAAM,KAAKQ,oBAAL,EAA7B,EAA0D,KAAKvD,MAAL,CAAY5C,EAAtE,CAA1B;AJNI,ADeK,AOpBrB,AEAS,AJYA,AQ/BqB,ADDlB,AxBiEJ,UmB7CF2J,OMnBM,CzBgEE5P,IwBjEI,GXyBG6I,CMLC,AKpBAvM,CxBiECa,IaxCP,AWzBE,CXyBUzB,AMLAqT,AKpBAjL,KAAV,AxBiEevC,CaxCjB,AWzBJ,CXyBuBsC,IbwCZ,CaxCP,AbwCwBvC,CaxCE,ObwCnB,EAA2BX,CmB7CCkI,OAAOhC,AnB6CnC,CaxCoC8B,CbwCC,IAArC,CAAf,SaxCkElB,AML9C,EAAgDoB,MAAhD,CAA5B,CNKoFjK,OAAzB,CAAkC,2BAA0BkF,KAAM,EAA7G;AACH,ADeI,AOpBjB,AEAQ,AJYA,AQxBC,ADRA,AxBiED,A2B7FZ,QRgDQ,CAAC8L,IKtBG,GHsBInI,ArB6CAzH,GwBhEC,GLmBb,AnB6CQ,EmB5CJ,AnB4CgB,EqB7CEyJ,KFCX,IEDH,CFCJ,CED6B;ARMxB,ADeI,AOnBb,AEDY,AJYJ,AQxBH,ADPO,AxBgEA,SyB3EsB,CN+B5BoG,AM/BF,GZgBI,II0BKxD,EJNA,EWzBIxD,AxBgEA3I,EqB7CEmH,CrB6CP,CAASrH,EwBhET,CAAYtE,CP+BhB,EjBiCI,CmB5CgBkT,AFWA,EO/BhB,CAAmBlL,GHmBH8M,AJYM,CO/BtB,CAAwB,GP+BG5E,OEXOnE,AEDlC,QGnB0CL,CLoB1B,CFWM,CEXuByB,AFWA,MAAM,CEXChC,IFWIyF,CO/BLpO,MAAT,CAA1C,CP+BmD,EAA7B,CEXN,CAA5B,AFWiF,KAAK2K,MAAL,CAAY5C,EAA3D,CAA1B;AJLI,ADcH,AOnBT,AEDS,AJYD,AQxBP,ADPQ,AxBgEA,WmB5CF0J,EnB0CC,MAGK,EaxCI9G,IMLI+G,ENKT,CAAYlU,MAAZ,CAAmBmI,GMLxB,ENKK,CAA0B,CMLA,CAACgM,gBNKgBlH,GMLvD,YNKsElB,UAAU7I,OAAzB,CAAkC,gDAA7E;AACH,ADcDlB,AOnBX,AEDW,AJYA,AQxBR,ADPK,AxBiEO,CmBtD6B,CAA7C,OKlBQ,SH0BUuT,EToBE,EZ0BE,GY1BV,CZ0Bc3U,KAAJ,CqB9CU,ArB8CA,MqB9CM,qCAAcmL,CrB8C9B,CAAN,OqB9CsB,EAAyB,KAAKoB,MAA9B,CAA1B;AROA,ADcH,ASpBG,AJYA,AQxBRW,ADPC,AxBiEQ,A2BjGb,QRoDSkG,CPKgB,CALjB,MSDQuB,CJYCvF,CQxBC/J,MNaT+N,CFWG,AQxBR,EJYQ,AIZevG,CRwBC,CIZC,EIZzB,CRwBQ,CQxBqB;AZmBxB,ADcJ,ASpBW,AJYJ,AQxBJ,ADPJuJ,AxBiEK,KY/CE,CAAP,GCnCW,Ab0EP,Ca1EA,KYwBOtV,IRwBI,CIZC,AGnBA,IP+BIsO,CQxBC,IAAV,EAAgB,CRwBnB,IQxBwB,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;AZmBvD,ADcJ,ASpBmB,AJYX,AQxBG,ADPJ,AxBiEH,CYnDL,QKDe,CAAP,KObOtO,GCOG8V,ODPO,CHmBChC,AIZA,GDPX,ECOgB8B,ADPA,KHmBK,AIZV,ADPU,CCOCG,ADPtB,EAAwB,ECOb,CJYgB,AIZA,EAAExR,ADPA,CAA7B,EHmBgCuO,AGnBA,ICOL,EAAhB,CJYgB,CAAapH,AIZA,CAA7B,CAAd,GJY8B,AGnBkB,CHmBCrB,SAAnB,CAAtB;AROhBiC,ADcJ,ASpBoB,AJYf,AQxBOwJ,ADPA,AxBiER,YaxCQzL,MYlBMyJ,GZkBd,EAAmB,CQNCA,CIZZ,IAAiB,CAAjB,MJYwB,IAAhB,EAAsB;AROlC,AQNgB,AJYpB3E,AQxBQ2G,ADPA,QGlCHnN,GViEE,IJNI3I,CWzBC,CGlCP2I,CFyCSsN,GDPGlB,ECOT,EZkBa,CYlBCe,EDPV,CXyBD,AQNcrK,AGnBA6C,EXyBE,CYlBC2H,GJYR,CRMY,AQNA3X,CRMrB,AYlBW,ADPd,CCO0B8X,CZkBC,AWzBA,GHmBf,AIZE,CJYiB9P,AIZAyF,CZkBC,CAA7B,EAAgC,AQNvB,AIZE,CJYuB,AIZrC,GJYuC1B,SRMS,CQNC7I,OAAQ,UAA7C;AROZ,AQNS,AJYb,AQxBI,ADPI,QGnCCsT,IVkEL,KAAKxG,AQxBAsH,CZkBCrJ,Cc5DDuI,EHmCIC,CCOT,CAAWsB,ERwBf,EAAmB,CO/BX,CCOJ,ADPiBlH,CCOC2G,GZkBGzL,AWzBjB,ECOJ,QZkB+BmC,OAAV,CAChB1J,GADgB,CACZ,MADY,EAEhB2J,GAFgB,CAEZ,EAFY,EAGhBC,KAHgB,CAGV,EAHU,EAIhBC,KAJgB,EAArB;AAKA,AQVK,AJYL,AQxBH,ADPI,QGpCczL,CFsCZ,CAAP,OJYQ,AMlDWA,CNwDX,OAAON,CAAP,EAAU;ARUd,AQTQ,AJWRwO,AQxBP,ADPO,QGrCuBoG,UAAAA,CHqChB,KAAKT,CHoBCtJ,CJWC,KIXN,AJWWwD,AO/BZ,CHoBa3Q,AGpBAuQ,KAAb,CHoBC,CAAmBnI,AGpB3B,IP+BA,CIXQ,CAA0B,GAAE2D,UAAU7I,OAAQ,kBAA9C;ARUR,AQTQ,AJWR4N,AQxBR,ADPK,AxBiELhL,SwBvEW,CAAP,OxBuESZ,CapCCoJ,GboCd,EAAmB,GiBlCG,KAAKkC,CJFCzE,UAAUuC,CIE9B,UJFA;AACA,AQTQ,AJWR,AQxBRK,ADPC,AxBiEG,cAAMtM,IapCIkM,CYtBCtI,EzB0DE,KqB7CK,AIbtB,AzB0DsBlD,EyB1DE0L,EJaE7N,CRSC,AboCV,GyB1DjB,CJasB,CRSUuM,AQTA7K,AIbAmL,AzB0DA,CqB7CV,CAAN,EIbhB,CzB0DqC3K,CapCV,AYtBW,CZsBCwB,IboCnC,EapCuB,CACdgE,YADc,GAEdhI,OAFc,CAENyL,UAAUyC,SAFJ,CAAnB;AAGA,AQXK,AJWL,AQxBJ,ADPJyI,AxBiEI,eyB1DOvV,AzB0DA,EalCEyL,AIAAA,EO/BE,CxBiECpH,GalCR,AIAA,CJAY/F,AIAAA,CQxBC,IAAV,CZwBH,AIAA,CJAmBmI,AIAAH,AQxBA,EzB0DhB,CAAmB3F,CiBlCtB,CJAA,AIAwB,AQxBA,CZwBE,AYxBvB,CzB0DA,CyB1DwB,CzB0DC6C,IyB1DI,AzB0D7B,CyB1DA,AzB0DP,EyB1DuC,KZwBKqJ,CIAxC,OQxBgD,EZwBG,EAAnD;AACA,ADQZ,ASnBa,AJWD,AQxBA,ADPJ,AxBiEH,MY1BCpC,OS/BM,EGRG,EP+BE6D,CJAC9K,AYxBAsS,CJcD,CGrBGf,KX+BK,ADQA,AKRb,CLQc5T,AahCA,CDPX,CP+Ba,AO/BAgO,EZuCH,CahCMyG,CbgCC5K,AYvCjB,CP+BH,CO/BJ,ECOkB,CAAW+K,IAAX,CAAgB,CbgCjB,CahCmBxR,CbgCCmG,MahCH,EAAhB,EbgCD,AahC8B,CAA7B,CAAd,GbgCgD1K,UAAU,KAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;ACPzFwF,ADQZ,ASlBY,AJUP,AQxBG,ADPP,AxBiEDlB,QY1BIoG,KZ0BKnG,GyB1DG,CAACuR,CbgCb,ECRgBzL,ADQA,AZ0BhB,CqB5CiBoB,CIdT,AzB0DU,EyB1DE,GJcR,CAAYnN,ERUEkD,IQVd,CAAmB8E,ERSV,EQTT,CAAyB,IAAG+D,UAAU7I,OAAQ,4BAA9C;ARWAf,ADQR,ASlBQ,AJUR,AQxBQ,AD1Cc,AxBoGtB,eY1BOiK,AKRA,AjBkCA,IAAIrK,CiBlCCiO,CIVC7C,ERUE,CAFE,EDUCR,AZ0BX,CqB5CC,ArB4CW,CqB5CC3M,AJUpB,AjBkCoBgC,KY1Bb,CSlBC,CAAmBmG,ArB4CR,EAAUlG,EY1BEyK,CSlBvB,CAA0B,ErB4Cf,KAAqB,GY1BGrF,QAAZ,CAAqBsF,GSlBG5B,ITkBxB,CSlB6BC,CTkB5D,QSlBuD,CAAe,KAAKmC,MAAL,CAAYhC,gBAA3B,CAA6C,EAA5F;ARWAhE,ADQX,ASlBQ,AJUR,AQxBQ,AzB0DD,iBAAKtE,CwBrGI2T,GXmEAvI,AbkCT,CAAU7K,GAAV,CAAc8C,OarCD,YbqCb,CAAkCD,OAAlC,EAA2C,CAACE,GAAD,EAAMC,GAAN,KAAc;AajCrDiB,ADQZ,ASlBQ,AJUR,AQxBQmQ,AzB0DI,UY1BN5K,QahCQuI,CbgCC,ASlBAxJ,CrB4CCxF,EY1BhB,CZ0BY,EACIlE,CanCM8J,AYxBd,IAAkB,CAAlB,CzB2De5F,EqB7CCyO,CrB6CR,CanCgBvN,QAJX,CQNb;ARWIC,ADQZ,ASlBK,AIdGkQ,AzB2DIxV,QY3BR6K,CS5CO,CAAP,QIYUgL,IZwBIvJ,CDQlB,CZ2BoBlI,GAAR,WyB3DJ,CAA2B7F,IAA3B,CAAgC,EAAEwI,WAAWG,KAAKC,GAAL,EAAb,EAAhC;AZmBa,ADcrB,ASlBC,AIdOqO,AzB2DC,UY3BH,GCdE,AbqCA,CYvBEzV,IahCI2V,GbgCR,CAAY,CAAC1V,GahCX,GAAiBwV,CbgCP,EAAUvV,GahCGyV,GbgCb,KAAqB,AahCd,CAAeI,IAAf,CAAoBrJ,MAApB,CAAjB;AZyBA,ADQJ5L,ASlBJkS,AIdQyC,AzB2DH,SANM,CAAP,GYrBKpU,GCRG,ADQR,CAASoG,ASlBAuC,CIdC4L,IZwBI,CYxBV,GJcR,AIdsBH,EbgClB,ASlBoB,CTkBC,CAACrR,EahCEwR,CbgCH,EAAMvR,EahCT,CbgCG,AahCS0R,IAAZ,CbgCiB,AahCArK,EZwBV,EYxBP,CAAd,EZwB0BN,MAAhB,EAAwBpB,SAAxB,EAAmC,EAAEO,MAAM,SAAR,EAAmBF,YAAYlH,KAAKmC,QAApC,EAAnC,CAAV,EAA8F;AAC1F,ADQJ,ASlBJ,AIdI,AzB2DP,eqB7CU3F,CTkBCyE,CahCCmR,EbgCL,EACIrV,CajCJ,CZwBW,AYxBA8V,EJcE,GTmBF5R,CSnBR,AIdH,CAAkBqR,CbiCd,ASnBe,IIdnB,CJcwB,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;ARWxCvP,ADSR4E,ASnBA,AIdH,AzB2DLxG,SyBrEW,CAAP,MJwBQ,MAAM0F,CrB6CCzF,EAAnB,EAAuB,CanCC,EDSEF,ESnBE8K,CTmBpB,aSnBU,EAAV,EAAsC;ARS3B,ADWXlP,ASnBI,AIdX,AzB2DG,eAAO,EarCC,EbqCGD,CY1BC,GSnBG4J,CTmBX,EZ0BG,CAAY,CAAC3J,OAAD,EAAUC,CqB7CL6S,KrB6CL,KAAqB,EqB7ChC;ARWH,ADSJ,ASnBI,AIdT,AzB2DQ,SY/BJ,QZ+BSjS,IAAL,CAAUO,GAAV,CAAciD,kBAAd,CAAiC,KAAKE,MAAL,CAAYD,GAAGE,SAAH,GAAeC,QAAf,CAAwB,KAAxB,CAAZ,CAAjC,EAA8E,CAACN,GAAD,EAAMC,GAAN,KAAc;AalC5F,ADSP,ASnBO,AIdR,AzB2DY,KYjCN,CAAN,UCFYmI,AQVA,IrB6CIpI,EqB7CE4F,CrB6CN,EACI9J,MapCW,CAAC,AQVAkP,ArB8CLhL,CapCf,EAAuB,AboCf,cqB9CE,EAAV,EAAyC;ARUlB,ADU/B,ASnBY,AIdZ6R,AzB4DYhW,WY3BL6K,IajCI,QJcQlB,CrB8CCvF,GAAR,CapCkC,EDSnBwG,ICTyB,IQVxBoI,CRU6B7H,ADSrBN,MCTgB,CAAYvI,MAAZ,CAAmByB,AQV3D,ETmBwC4G,OAAhB,EAAV,ECT0B,CAAiC4B,CDSnB7B,SCTd,EAA6CxH,CDSnBmC,GCT1B,CADrB,IDUmC,CAAqBsF,OAArB,EAAlE;AACH,ASnBY,AJUToE,AQxBI,AzB4DK,CY1C+C,CAA5D,WZsCY,EiBhCGhF,AQxBA,KAAKuL,IRwBhB,CQxBW,CRwBW,AQxBAhQ,IAAlB;AZsB2B,ADYnC,ASnBY,AJUJ,AQxBH,AzB4DI,SANM,CAAP,KiB9BO5F,IIVIiK,GRQK7E,GIEC,IJHU,AIGpB,EAAgB,GIVHgO,EJUQ,CAArB,CJFShO,CIEe,KAAK,CJHT,AIGpB,CIVH,CJUmC,aAAa;AJHzB,AQN1B,AJUG,AQnFS,AzBuHhB,SqBtDU,CAAP,SJkBY,CAAC,EJHYrB,IADE,AIIRsG,SJHMtG,CIGIuL,GJJF,cIIR,EAAP,MACH,MAAMjF,UAAUkF,aAAV,EADH,MAEH,MAAMlF,UAAUmF,cAAV,EAFH,MAGH,MAAMnF,UAAUoF,iBAAV,EAHH,CAAR;AJJuB,AQL9B,AJaI,AjBiCLzK,QyBxHSwQ,CRkFE,CAAP,QQlFKA,IZgF0BjP,IbwCbtB,EazCS,EbyC/B,EAA4BlB,IAA5B,CaxCmCwC,CbwCD,KazCH;AQJ/BwN,AJaC,AjBiCG,eAAO/T,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,EqB9CEqK,GrB8CG,CAA7B,EAAgC,GqB9C3C,EAAgD,QrB8CQ;AaxC5C,AQLR,AJaJ,AjBiCQ,eqB9CGrK,CrB8CCkF,IazCIqB,KQLK,CRKT,EAAY,CQLb,EAAgB,KAAK,CAArB,EAAwB,CrB8C3B,IqB9CgC,CAA7B,EAAgC,aAAa;ARMxC,AQLR,AJaRmJ,AjBiCQ,kBqB9CMsE,ArB8CA7O,IiBjCIwK,IjBiCI,EiBjCtB,EAA0B,AjBiClB,CqB9CmB,MAAMtF,UAAU4J,gBAAV,EAAzB;ARMK,AQLL,AJaJ,AjBiCI/O,eiBjCGlF,IIbIgU,MJaM,IAAV,EAAgB,EIbE3J,GJaG,CAArB,EAAwB,AjBiCD,IqB9CKgC,CJaC,CAA7B,EAAgC,KIb5B,IAAqC,CAAC,GJaG,EIbE6H,UrB8CdjP,EqB9CS,CAAkBoF,CrB8CrC,EAAgB/J,MqB9CG,CAA7C,ArB8C0B,EAAyBC,MAAzB,EAAiC;AaxCvD,ADchB,ASnBS,AJaG,AjBiCI,MY3BVoK,GStBS,CAAP,OTsBS,CAACK,AKNA4E,EJRE,GbyCG5P,MY3BN,EAAc4K,AKNA,EjBiCE,EY3BhB,EKNoB,AjBiCd,EAAgB,CY3BC,EKNE2D,EjBiCE,CAArB,EAAwB,KAAK,CAA7B,EAAgC,CiBjC3C,QJRsCnJ,IbyCkB,IazCV2E,MAAtC,CAAJ,EAAmD;AAC/C,ADchB,ASnBC,AJaO,AjBiCQ,QY3BZiB,WKNW,ILMI,CCdC,ADcAJ,AZ2BA,IY3BpB,EAA0B,mBCdKxF,OAAX,CAAJ,EAAyB;AACrB,ADchB,ASnBJmO,AJaYrF,AjBiCQ,eY3BT,IAAP,CSnBY7D,SAAhB,AJayBuF,CJRCvF,AbyCArF,CqB9CC,SRKS8G,AIQA+D,UAAX,CJRC,AIQqBF,EJR3B,CbyC+B1K,IiBjCGkD,AjBiCJ,IAAU,EiBjCnC,EAAqC,CAArC,CADV;AJNK,ADcnB,ASnBG,AJaQgG,AjBiCY,eqB9CbnO,UAAU,IAAV,CRKe4F,CQLC,EJaEgK,EjBiCE,CqB9CC,CRKCxK,AQLtB,EAAwB,ArB8CA/E,KqB9CK,AJaAwP,CJRCjG,AQL9B,CrB8CoB,CqB9CY,ArB8CCtJ,EazCX,CAAa,CAAb,EAAgBsF,CIQpB,AjBiCc,CiBjCQ+J,EJR/B,CbyCoC,EqB9CA,EJaEtI,SAA7B,EAAwC,CAAxC;AJPT,ADcpB,ASnBQ,AJUO,AjBoCalC,WY3BrB6F,EKTC,GIVIX,OTmBOe,GSnBG+I,ETmBf,ECdmBpH,EDcE7C,GSnBpB,EAAyB,CrB8CC/I,CazCC,GbyCP,CAAWO,CazCC+J,EbyCZ,CAAezG,GazCR,CAAY7D,ADcNyJ,ICdN,ADcP,CCdwBoC,ADcpD,SCdmC,CAA2BpH,EbyClC,CAAqCX,EazCEzC,EbyCvC,EAA2C,CazCT,AbyCUiC,CazCC,CAAX,CbyCS,CazCK,CbyCCC,CazCf,CAA3B,CAAf,AbyCmD,KAAc;AaxCjE,ADcvB,ASnBe,AJaP,AjBiC2B,CYhCpC,QKPe,CAAP,aIPeuF,MRKMwB,MAAL,CAAYlC,EQLJiK,ErB8CQ,CAAC/O,EazCjB,CAAoBwI,AbyCR,EqB9CpB,ArB+CwB3M,QAAQoE,GAAR,Ca1ChB,CAAmCX,IAAnC,EAAyCgJ,MAAzC,EAAiD,IAAIf,mBAAJ,CAAc,CAAd,CAAjD;AACH,ADcrB,ASnBa,AJaR,AjBkC4B,iCAHD;AatCZ,AQLR,AJaR8D,AjBkCyB,gBqB/Cb,GJaGH,GIbG,GJalB,CJRsB5D,CQLCqI,AJaA,EjB6BQ,CAAP,GarCK,IAAIpI,SQLf,CAAyB3B,SRKd,AQLX,CRKyBjF,AQLnC,EAA+C,MRKJ6G,OAAtB,EAA+BC,GAA/B,CAAmC,IAAIF,mBAAJ,CAAc3B,UAAUzE,IAAV,CAAeuG,MAAf,CAAsBxG,QAApC,CAAnC,CAAb;AACA,AQLJ,AJaR,AjBkCiB,eiBlCV3F,QIbQiK,ERKEwB,AIQA,AjB2BD,IiB3BT,EJRK,AIQW,CJRClC,IIQI,CAArB,CIbiBmK,CRKZ,AIQmB,CJRCzG,IQLxB,AJa4B,CAA7B,EAAgC,OJR3B,CAAmClJ,IAAnC,CIQwC,CJRC,IAAIiI,mBAAJ,CAAc,CAAd,CAAzC,EAA2DD,IAA3D;AACA,AQLP,AJaD,AjBkCY,kBiBlCN6D,SJRSvF,Cb0CCjF,GiBlCG,MJRM8H,AIQA,CjBkCC,IiBlCIqB,EjBkCEvJ,Ma1CxB,MIQR,UjBkCsDC,IAAtB,CAApB;AazCP,AQLL,AJaA,AjBkCY,gBqB/CR,EJaE8K,IIbI,KAAKgE,CrB+CC3O,UiBlCUuK,CjBkCC,IAAf,EiBlCqBxH,AjBkCA,MiBlCP,GAAgB2F,SIbhC,CAA0CzD,SAA1C,CAAV,AJaqDjC,EIbW,GJahE;AJPI,AQLA,AJaJ,AjBkCgB/C,kBiBlCV2K,KJRK,AQLA/F,KRKP,OIQmB0F,GIbH2D,CrB+CO,GiBlCGjM,SAAP,AjBkCgB,EqB/CnC,CJasCyG,oBAAWzG,SAArD;AJPC,AQLA,AJaD,AjBkCoBnC,mBiBlCb,sCjBkCqCD,IAAxB,EAA8B3E,OAA9B,EAAuCC,MAAvC;AazCpB,AQLA,AJaI2N,AjBkCa,gBa1Cb,AQLA,KRKKzC,MAAL,CAAY7I,CIQCgN,AjBgCD,EAEG,Ga1Cf,AbwCY,CaxCOxJ,KIQKyJ,UAAX,CAAsBE,CJRnC,EAAJ,EAA4C,YIQ3B,EAAyC,CAAzC,CADV;AJPqC,AQJxC,AJaA5B,AjBkCS,sBqB/CHsF,GrB2CE,GatC0B,Gb2CrB,EqBhDI,AJaA7D,CJRuB,KAAKnE,AQLtB,KAAKqH,AJaAjD,CJRY,CAAYjN,KQL7B,CRKiB,AQLJ0J,CRKuBlI,CIQ1C,CAAsB4L,IIbhB,CAAqB3F,KRKJ,CAAgC7G,GQLjD,AJaN,CJRuB,AQLxC,CRIwC,AISe,CAAtC;ALOjC,ASnBgB,AJUG,AjBsCSlD,MY7BtB+K,OKTM,MLSO,CAACjB,ASnBAqJ,ITmBD,EAAOpJ,OSnBO,ETmBd,CZ6BiB,CY7BC7G,ASnBrB,CrBgDsB4B,CqBhDC,ETmBpB,IZ6BiB,CY7BU,CZ6BCrB,IAAX,EAAR;Aa7C4B,ADiBpD,ASnBgB,AJaX,AjBmCgB,QY7BjBqG,CKdO,CAAP,GLcKkB,MAAL,GChBgBlG,CDgBD,ESnBEqG,IRE+B,EDiBpD,ASnBgB,CAAYnN,CTmBC,KChBT8G,AQHJ,CAAmBkB,IAAnB,CAAyB,CREW,EQFT+D,UAAU7I,OAAQ,WAA7C;AREoC,ADkBhD,ASnBY,AJaf,AjBmCgB,eY7BN2I,MZWK,Ca5BapG,Ab+Cb,IahDoC,CQD7BkG,ErBiDArJ,CAAP,EAAU,CY9BGwJ,ECjBArG,EDiBlB,EClByC,ADkBjBsG,GSnBHmJ,MTmBrB,EAAmChQ,ASnB9B,ITmBL,CAAP;AClBgD,ADmBnD,ASnBY,AJabyM,AjBoCoB1P,KYhCpB,MAGK,IAAI6J,EKPI,GLOCkB,ECnBqB/E,IDmB1B,ECpB2C,EDoB5B,CZ6BG3F,CAAP,IY7Bf,CCnB8B2F,CDmBH,KCpBoB;ADqBhD,ASpBK,AJaL,AjBoCa,aqBvDT,CAOA,CTmBGsE,AKPA7K,MIZIY,CAAP,EAAU,CJYG,IAAV,ELOgBwJ,AKPA,ILOhB,CKPqB,CLOCC,AKPtB,EAAwB,KAAK,CAA7B,CLOA,CKPgC,CLOC7G,IAAjC,CAAP,OKPoD;AJZ5C,ADoBX,ASnBW,AJYJ,AjBoCK,iBAvBM,CiBbLmM,AjBaF,Ea1BIpJ,CQCCkF,KRDL,CQCA,AJYW,CJbC,AQCAnN,KJYK,CIZjB,CAAmBoI,GJYG8C,EIZtB,CAA0B,CJYT,CAAUtB,CIZCmC,OJYX,CAAmB,EIZE7I,MJYrB,CIZ6B,AJYlD,mBIZI;ARAI,ADoBnB,ASnBe,AJYJ,AjBoCC,CYpCb,YZWY,MiBXO;AJZF,AQCD,AJYAyM,AjBoCJ,kBY7BG5C,CZ6BI,GqBhDG,CrBgDChL,GqBhDGnB,IrBgDP,CqBhDG,ArBgDS,CqBhDC0B,AJYA,AjBoCAN,CqBhDV,CAAN,IJYsB,CjBoCP,EAAUC,EiBpCEmP,IjBoCZ,KAAqB1P,QiBpCd,CAAuB2P,CjBoCC,IAAV,CiBpCd,CADnB,AjBqCiD,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;AahDjF,AQCH,AJYGvB,AjBoCA,oBajDI,EbiDElJ,OiBpCO,MAAM,KAAK4K,OjBoCM7K,IAAxB,EAA8B3E,CiBpCjB,CAAoBqP,KjBoCjC,CiBpCa,CjBoC0BpP,EajDX6E,IbiD5B,CAAN,GajD0C2E,MAAtC,CAAJ,EAAmD;AAC/C,AQCR,AJSO,AjBuCN,aiBvCD,AjBqCwC,CAAjC,CAAP,IqB9COE,KRDK,UQCIqJ,eRDOlO,AQCvB,ORDY,CAAJ,EAAyB;AACrB,AQCf,AJYA,AjBoCA,SqBvEM,AJ6BA,AjBUA,CqBvCP,AJ6BA,AjBUA,oBajBsBiF,UAAUyB,WAAV,EAAN;AACA,AQCnB,AJYA,AjBoCA,8BajDyBlG,OAAOR,QAAQwE,IAAR,CAAa,CAAb,EAAgBhE,IAA7B;AACA,AQCpB8D,AJYAwG,AjBoCA5K,eqBhDWF,GJYG+K,EjBoCEpM,EqBhDhB,EAAoB,ArBgDpB,CiBpCA,CjBoCsB1C,CiBpCC,GJbG0L,CbiD1B,EAA6BvJ,IAA7B,EajDmC,AbiDA,KajDKiI,MAAL,CAAYtK,IAAZ,CAAiB6L,SAAjB,CAA2BpH,KAAKpD,KAAL,CAAW,CAAX,EAAc,EAAd,CAA3B,CAAf;AACA,AQChB,AJYA,AjBoCA,YqBhDI4C,AJYA,CAAC,EjBoCE,GiBpCGgL,CIZV,ArBgDW/P,EqBhDE,IJYR,CAAa8P,AjBoCX,CAAa7P,EajDCmL,KIaKjK,AjBoCP,CajDH,CAAY+H,EbiDI,GiBpC3B,CAAL,CJbgB,CAAoB0D,AIaA,cJbpB,CAAmClJ,IAAnC,EAAyCgJ,MAAzC,EAAiD,IAAIf,mBAAJ,CAAc,CAAd,CAAjD;AACH,AQCT,AJYA,AjBoCA,kBqBhDMrC,AJYA,AjBoCApE,IiBpCIrG,KAAJ,AjBoCS,CiBpCE,IAAGiR,EIZE,MJYM3O,OAAQ,aAA9B,CAAN,yCIZA;ARAQ,AQCR,AJYH,AjBoCOH,mBqBhDG+D,ErB+CQ,KahDD2G,CQCCnC,IAAR,CAAa,CRDC,AQCd,EAAgBC,ERDEmC,IQClB,CAAuBpN,OAAvB,CAA+B+K,MRDjB,CAAcvE,MQC5B,ERDoC6G,EQCY,CAAC,CAAxD,GRDqB,EAA+BC,GAA/B,CAAmC,IAAIF,mBAAJ,CAAc3B,UAAUzE,IAAV,CAAeuG,MAAf,CAAsBxG,QAApC,CAAnC,CAAb;AACA,AQCX,AJYD,AjBoCQ5B,aiBpCH0H,MAAL,CAAYnN,AjBkCO,Ka/CFmN,CIajB,CAAmBnF,IJbP,AIaZ,CJbwBiD,AIaC,IAAG4G,GJbhB,CAAoBlD,IIaIzL,OAAQ,GJbhC,CAAmCuC,IAAnC,EAAyC,IAAIiI,AIazD,mBJbqD,CAAc,CAAd,CAAzC,EAA2DD,IAA3D;AACA,AQCZ,AJYA,AjBoCQvG,YiBpCJ,CAAC,EIZE,GJYGiG,EIZV,ArBgDYjI,IiBpCP,CAAYjF,AjBoCAiH,EajDE6E,Ab8CA,GiBjCd,CAAkBlL,GAAlB,CAAsBgR,EJbEjD,MIaM1L,OJbvB,AIaP,CAAL,EAA6C;AJZpC,AQCZ,AJYO,AjBoCIiE,iBiBpCC2D,IjBoCI,CiBpCT,CAAW+G,GjBoCGhP,IiBpCd,AjBoCS,CAAUuE,KAAV,CAAgBlC,KAAKiC,GAArB,CAJM;Aa5CX,AQCZgO,AJYK,AjBoCO9N,aqBhDH0E,SAAT,CRDmB,CQCC,ErBgDE,EajDV,GbiDelJ,IAAL,CAAUuE,KAAV,CAAgBlC,KAAKmC,QAArB,CALC;Aa3Cd,AQCL,AJYH,AjBoCWlF,aalEJ,EQkBGT,IRAE,IbgDM,EqBhDE,GrBgDGmB,CqBhDb,EAAgB,CrBgDR,CAAUuE,GqBhDG,CAArB,CrBgDQ,CqBhDgB,ArBgDAlC,KqBhDK,ArBgDA/C,CqBhD7B,EAAgC,ErBgDxB,CANI,UqB1CiC;ARC5C,AQAJ,AJYRuO,AjBoCYpJ,qBahDK6F,CbgDCjI,KahDN,AIYW,AjBoCAoC,CahDCtH,MAAZ,CAAmBmI,KAAnB,CAAyB,8DAAzB;AACH,AIYL,AjB4BmB,aAAf,EiB5BGzG,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;AJXnD,AIYG,AjBoCA,SahHG,CAAP,QbgHU6F,QAAQC,QAAQ,eAAR,CAAd;Aa/CP,AIYO,AjBoCA,kBiBpCM8J,AjBoCAhL,KAAK,IAAIiB,IiBpCI,CjBoCR,CAAUN,IiBpCI,EjBoCd,CAAX,EiBpC8BgJ,cAA9B;AJXRpB,AbgDQ,YahDA9C,MbgDMtE,GahDd,EAAmB,KbgDK,KAAKhC,IAAL,EAAWgC,OAA3B;Aa/CJ,AIQoD,AjBwChDnB,eahDG5E,AbgDAgG,IAAH,CAAQlC,GiBrCgC,EJX3B,EbgDEC,EahDZ,AIW2C,EJX3B,AbgDX,CAAYgC,EiBrC+BkK,EJX3B,CAArB,EAAwB,AbgDnB,EAAqB,GahDG,AIWc,CJX3C,CIQ6C,AjBwCxC,CahD2B,AbgDnC,aahDgD;AAChD,AQAA,ArBgDA3P,kBahDMpB,EbgDE0F,EAAR,EahDY,kDAAN,CAAN;AACA,AQAA,AJMgD,AjB0CnD,SAfM,CAAP,QiBxBYqJ,CITDhE,aJMyC,EINhC2J,IAAhB,EJSQ3F,cAHwC;AJLhD,AQAH,AJKmD,AjB2CvD,SqBzDU,CAAP,QRSUb,AIQkBgB,WAHwB,QJLvB,AIQDA,MJRO/D,KIKiB,KJLP1I,UAAV,EAA/B;AACA,AQAP,ArBgDDsE,gBahDYmH,SbgDSpK,GAArB,EAA0B,GahDGqK,MAAjB,CAAwB,CAAxB,CAAJ,EAAgC;AAC5B,AQAZsG,AJOQ,AjByCJ,WqBhDGtJ,CrBgDCrH,MiBzCMkN,CjByCC,CqBhDf,EAAkB,CRAC,CbgDC9O,GahDR,GbgDR,EAAwB,EiBzCE,KAAK8O,aAAL,CAAmBG,IAAnB,CAAwB,IAAxB,CAAtB;AJNC,AQAL,AJOI,AjByCA,eqBhDGrQ,GrBgDG,IAAId,GqBhDG,ErBgDP,CAAU,CqBhDb,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa,MrBgD1C,CAAN;Aa/CA,AQAA,AJOA,AjByCH,aiBzCI,GJPGmL,GIOGuF,OJPOtC,IIOIgD,OJPlB,EAA2B,UIOpB,CAA+BrC,eAAeC,WAA9C,CAAP,EAAmE/L,GAAnE,CAAuE+N,aAAvE;AJNI,AQAJ,AJOA,AjByCJ,aiBzCK,CjByCCnM,KqBhDKkG,AJOA2F,EjByCE,EahDE,GbgDG1J,CahDV,GIOcoK,IIPFsD,GrBgDP,CqBhDT,ErBgD4B5Q,GAAnB,EAAwBD,IiBzC1B,CAA+BkL,WjByC7B,EAAb,EiBzCyDE,eAA9C,CAAP,EAAuEhM,GAAvE,CAA2E+N,aAA3E;AJNC,AQAJ,AJOG,AjByCJ,SqBnDO,CAAP,GRCI,AISC,EjByCG,CAAC,Ga/CA,AIMEN,EjByCGtO,SiBzCQgP,GjByCb,CAAkBvM,IAAlB,CAAD,IAA4B,CAAC,KiBzC1B,AjByC+BzC,CiBzCA8M,WjByCL,CiBzCiBF,AjByCCnK,IAAlB,EAAwBoC,KiBzClD,CAAP,EAAgEhE,GAAhE,CAAoE+N,OjByCxE,MiBzCI;AJLI,AQDX,AJOO,AjByCP,aiBzCQ,MAAMN,WAAWU,mBAAX,CAA+BlC,YAAYD,eAA3C,CAAP,EAAoEhM,GAApE,CAAwE+N,aAAxE;AJLI,AQDZkE,AJOK,AjByCLhO,SiBnDW,CAAP,YJIcyF,EQDExB,ArBgDA,SqBhDpB,EAA+B,CRCC,MAAM,KAAKoB,MAAL,CAAYjC,IAAZ,CAAiB7B,WAAjB,CAA6B;AACnDnC,AQDZ,AJOH,AjByCG,eqBhDOxF,ArBgDA,KAAKiG,Ia/CIoE,CQDC,IAAV,EAAgB,GRCG7I,EQDE,CAArB,EAAwB,CrBgDxB,CahDwD,AbgD9B,GqBhDG,CAA7B,CrBgD+BH,CqBhDC,IrBgDN,GAAa,KAAKD,CqBhDC,KrBgD7C,CAAP;Aa9CYwE,AQDR,AJOR2K,AjByCC,gBiBzCWC,EIPE6D,IJOd,EAAoB,EJNEhK,UAAUkD,KQDKlL,SAASgI,UAAUiK,kBAAnB,KAA0CjS,UAAS,MAAMgI,UAAU5C,GAAV,EAAf,EAAvE;ARD2D,AQE3D,AJOJ,AjByCJpD,eiBzCWrE,EJT2B,CAA1B,AbkDEgD,CqBhDCuR,ErBgDf,EAAmB/Q,EiBzCE,EIPE6Q,ArBgDvB,EiBzCW,AjByCc,EiBzCE,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,IIPI,CAAChK,QJOQ,EIPE8J,SAA3C,CAAP;AREI,AQDP,AJOG,AjByCJ,SqBnDO,CAAP,KrBmDOnU,GiBzCGyQ,OjByCO,GiBzCG,CjByCb,EAAgB,EiBzCEpC,GjByCG,CAArB,EAAwB,KAAK,CAA7B,CiBzCa,CAAmBmC,AjByCA,MiBzCnB,CAAhB,MjByCgD;Aa9C5C,AQDX,AJOO,AjByCA,gBiBzCIC,AjByCAzN,Ma/CMwK,Cb+CC,KiBzCKvO,AjByCAmC,MAAhB,Ea/CwB,Ab+CA,CiBzCxB,EAA2B,GJNG,KAAKqK,MAAL,CAAYjC,IAAZ,CAAiB3B,eAAjB,EAA1B;AACA,AQDZqM,AJOY,AjByCA,iBqBhDC7J,KRCKoD,AIMAmC,AjByCA,IqBhDlB,ArBgDsB1Q,EqBhDE,GrBgDN,CAAU,GiBzCG,KJNKsO,CIMC,KAAKe,MJNM7B,KAAZ,CAAkBb,EIM1C,SJNwB,CAAxB,Ab+CM,CAAN;Aa9CA,AQDR,AJOQ,AjByCH,YqBhDD2I,URCUhR,AQDd,AJOcoM,OJNO,IIMIc,SAAX,CAAqBD,OAArB,CAAN;AJLIjL,AQDZ,AJOQ,AjByCJ,kBAAMzB,KiBzCK,CJNCsG,Cb+CC,GiBzCGgE,EjByCEnI,Ia/CI1E,OADL,AION,AjByCE,CiBzCiBgP,EjByCExN,GAAnB,CiBzCF,CAAP,AjByCiCD,gBAAxB,EAAb;Aa9CQtC,AQDZ,AJOK,AjByCD,YqBhDA,KAAKgL,CrBgDChK,KqBhDN,CAAYmB,GRCG,CAFE,AbiDD,EqBhDpB,EAAwB,ErBgDE,KAAKrB,YAAL,CAAkBwC,IAAlB,CAAtB;Aa9CQ0B,AQDR+O,AJOH,AjByCG,SiBhDG,CAAP,MjBgDQ/S,QAAQ4E,Ca/CCwF,AQDA,CrBgDT,CAAW,CAAX,CAAJ,CqBhDkBJ,CrBgDC,KqBhDN,CAAY7I,ERCE,IQDd,CRFI,AQEeiE,cAAnB,CAAkCwD,UAAUyC,SAA5C,CAAb;AREQnH,AQDX,AJOJ,AjByCW,SqBlDR,MAGK,KrB+CO,KAAKrH,Ka/CKkP,Cb+Cd,EAAiB,QanDJ;AAKT5H,AQAR4O,AJMR7D,AjByCgB,yBqB/CKtG,ArB+CA/L,Ca/CC+L,AIMAmG,KjByCN,CiBzChB,AjByC4BlK,EiBzCEsK,CINC6D,CRAClH,Ab+ChB,CAAkB,SapDT,AQKJ,CRAsB,AQAA,CJM3C,AjByC4CxJ,EiBzCE,EINE0H,ArB+CC,MqB/CN,CAAYtK,IAAZ,CAAiBO,GAAjB,CAAqBgT,QAArB,CAA8B,CAA9B,CAAtB,CAAb,gBrB+CQ;AapDS,AQMpB,AJMD,AjByCS,eiBzCF1U,EJZC,QIYS,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;AJL5C,AQAR,AJMI,AjByCI,YqB/CJ,CAACwU,KJMK5E,EJNElC,GQAZ,ArB+Ce,EqB/CE,ArB+CAnH,MiBzCM,EjByCE,Ea/CjB,EIMqB,AjByCd,EAAP,GiBzC0BgI,cAA9B;AJLI,AQAJ,AJMA,AjByCC,iBqB/CI9C,CJMCyE,KINN,CAAY5R,MAAZ,CAAmBmI,GJMG,EINtB,CAA0B,EJMCyJ,EINE7F,UAAU7I,CJMjB,CAAmB6O,IAAnB,CINyB,AJMD,IAAxB,CAAtB,kDINA;ARCI,AQAP,AJMG,AjByCA,gBiBzCIG,EjByCEnP,Ia/CIsM,Ib+CI,CiBzCCiD,KjByCK,Ga/CG,Eb+CEtM,Ga/CGmH,CIM5B,EAA+B,EjByCX,Ca/CG,Ab+CW1H,Ca/CCnB,Gb+Cf,CAApB,Ea/CuB,CACdgE,YADc,GAEdhI,OAFc,CAENyL,UAAUuD,KAFJ,CAAnB;AAGA,AQFR,AJMQ,AjByCJ,eqB/CG4G,GrB+CGhO,Ea7CEmH,CIIC4C,IINb,IrB+CqB,GiBzCb,CAAiBK,EJJE,Ab6CA,Ca7CC,CAApB,EAAuB,Cb6CCtL,OiBzCxB,QjByCmB,CAAqBvB,IAArB,EAA2B1C,KAA3B,EAAkCmC,IAAlC,CAAvB;Aa7C2B,AQDlC,AJMW,AjByCJ,gBAAI,KAAKlC,CiBzCCmP,UJJgC,AIItB,CjByChB,CAAkB1M,Ia7C0B,AIItB6L,AjByCtB,Ka7CiDnE,Ab8CjD,KAAKnK,Ca9CuC,AIIXqP,CJJuB/N,MAAZ,CAAmByB,Gb8C/D,CAAkBN,IAAlB,EAAwBoC,Ga9CoB,AIItB,CJJuDwH,AIItB6C,MAAjC,EAAyCN,EJJnB,EAA6C1M,Gb6C7F,Ca7CgD,CADrB,Ab+CsB,IiB1CvB,CAAtB;AILZ8N,AJMY,AjB0CA,UqBhDNjH,SAAN,CrBgDgB,CqBhDC,AJMAgE,IjB0CI/P,MAAT,EAAiB,CiB1CjB,CAAmBkS,MAAnB,IAA6BC,OAA7B;AJNuB,AQC/B,AJMK,AjB0CO,eqBhDLzQ,UAAU,ArBgDA1B,CahDG8G,GQAb,EAAgB,ArBgDX,CAAYqB,CajDO,GQCH,CAArB,ArBgDK,CAAmB,CqBhDA,GRAXrB,EQAgB,CAA7B,EAAgC,ERDR,WQCqB,mDrBgDmDrB,IAAK,mBAAhG;AajDmB,AQE3B,AJMH,AjB0CQ,SiBlDF,CAAP,MIEQgG,SAAS,CRDYhG,IADE,AQETgP,SRDOhP,IADE,EQEd,CAAqBsG,UAAU7I,OAA/B,KAA2CyI,eAASgJ,iBAAjE;ARF2B,AQG3B,AJMP,AjB0CW,kBqBhDE0B,KrBgDK,EAAEpO,CalDkBA,MADJ,CbmDN,EqBhDE,ErBgDZ,EAAP,CqBhDwByM,CRFGzM,MADJ,IQGJ,CAAiBwD,MAAjB,CAAvB;AACA,AJMRgF,AjB0CS,gBqBhDG6F,MJMM,OINO,MAAMD,eAAetK,SAAf,CAAvB;ARFQ,AQGR,AJMJ,AjB0CI,eiB1CGrK,CjB0CCoF,GqBhDGwP,IrBgDP,CanDYrO,CISC,IAAV,CJTK,CISW,CJTC,EQGEwD,EJME,CAArB,EAAwB,CIN3B,EAA8B,EJME,CAA7B,EAAgC,aAAa;AJRpC,AQGR,AJMJ,AjB0CA,gBAAIxD,EiB1CEyH,GINGvC,IrBgDI,EqBhDT,CAAYnN,AJMA,EjB0ChB,IqBhDI,AJMkB,CINCgI,IAAnB,AJMuB2J,CINE,GAAE5F,MJMT,EAAtB,EINyC7I,OAAQ,wBAAuByI,eAASF,MAAT,CAAiB,OAAME,eAAS2K,UAAT,CAAqB,KAAIA,UAAW,GAA/H;ARFK,AQGL7K,AJMJ,AjB0CA,gBAAI,SqBhDS6K,UAAT;ARFC,AQGDA,AJMJ,AjB0CI,iBaxDA,CIcE,EjB0CE,CAAC,EalDA,AIQEjE,GjB0CGrP,GqBhDG,MAAM,GrBgDd,CAAkByC,CqBhDCiP,GrBgDnB,CiB1CH,AjB0CF,CiB1C6BhF,CjB0CC,KqBhDX,CAAiBjE,CJMCkE,KINlB,EAAyB5D,OJMf,CAAuB6D,CINjC,CAAnB,SJME,EAA+D,KAAKF,OAAL,CAAaC,cAAb,CAA4BC,WAA3F,CAAN;AJPQ,AQEP,AJMD,AjB0CQ,kBiB1CF,KAAKyC,CJRClD,CbkDCnM,YAAL,CAAkByC,EalDE8J,EbkDpB,EiB1CF,CAA2BG,CjB0CC,EAA1B,GalDI,CAA4BZ,CIQCgB,WAAR,CAAoBF,GJRzC,CAAJ,EAAmD,KIQrD,EAA4D,KAAKF,OAAL,CAAaI,WAAb,CAAyBF,WAArF,CAAN;AJPY,AQEZ,AJMA,AjB0CK,iBqBhDA6E,CJMC,KAAKpC,SINX,CAAqBtG,UAAU7I,CJMzB,CAA2BwM,KINjC,GJMyCC,CINC2G,UAA1C,GJMiC,CAAuBzG,eAAlD,EAAmE,KAAKH,OAAL,CAAaC,cAAb,CAA4BE,eAA/F,CAAN;AJPY,AQEZ,AJMA,AjB0CI,kBiB1CE,CINCyG,ErBgDEtT,EiB1CEqP,MINX,IrBgDI,CAAkB5M,IAAlB,EAAwBoC,IiB1CtB,CAA2B6H,QAAQI,MjB0CrC,GAA8C,EiB1CjB,CAAoBD,CjB0CjD,ciB1CE,EAAgE,KAAKH,OAAL,CAAaI,WAAb,CAAyBD,eAAzF,CAAN;AJPY,AQEf,AJMG,AjB0CI,SqB3DD,CAAP,OJiBSH,KjB0CK/I,EiB1CV,GAAe+I,EjB0CE,EalDE,GIQnB,CJRY,AbkDW,KAAKrJ,kBAAL,CAAwB6B,QAAxB,CAAnB;AajDK,AQEhB,AJMI,AjB0COpB,SiBlDD,CAAP,gBjBkDkB,MAAM,KAAKJ,qBAAL,CAA2BC,IAA3B,EAAiClB,IAAjC,CAAhB;AqBjNY,AJwKvB,AjB0CQ,aAPD,CAQA,OAAO2C,KAAP,EAAc;AazDL,AIejB0J,AjB2CY,YiB3CJS,MIzKSgC,ErBoND,KAAKvU,CiB3CrB,EAAwB,GjB2CZ,CapDsC,CboDrB,KapD2B,KAAKmN,MAAL,CAAY7I,MAAZ,CAAmBwB,YAAnB,CAAgCZ,IAAhC,CANvC;AIgBb,AjB2CY,YiB3CRqN,ajB2CavS,MiB3CM,AjB2CX,CAAYmI,IiB3CIgF,CjB2ChB,CAAmB,IiB3CR,CAAYzC,GAAZ,CAAgB8H,SAAhB,CAA0BC,UjB2CrC,EiB3CZ,EAA+D;AJhBlD,AIiBT,AjB2CK,iBiB3CAtF,MAAL,CAAYnN,EJXI8G,IIWhB,CAAmBqB,EJjBV,GIiBT,CAAyB,KJXTrB,OANP,4CIiBT;AJjBS,AIkBT,AjB2CImB,mBiB3CG,KAAP,CjB2Ca,CavDYxC,GbuDrB,Ca7DK,SAMgBA,IANhB;AAAA,AImBZ,AjB2CI,SiB9CL,IjBiCI,EiB7BC,IAAI,CAAC,EjB2CE,GiB3CG0H,CJdoBlF,KIczB,CJpBG,AIoBSyC,GAAZ,CAAgBgI,IAAhB,CJdyBzK,AIcJ0K,MJpBlB,WIoBH,CAAuCJ,cAAvC,CAAL,EAA6D;AAC9D,AjB2CI,qBAAKvP,YAAL,CAAkByC,IAAlB,EAAwBoC,mBAAxB,GAA8C,KAA9C;AazDI,AIeR,AjB2CC,kBiB3CK,IAAIjH,EJfEqH,GIeN,CAAW,EJfT,EAAY,AIeAsK,cAAe,iEAA7B,CAAN;AJdY,AIef,AjB2CG,mBAAO5O,OAAO0E,MAAP,CAAcvB,OAAd,EAAuB,EAAEmB,MAAF,EAAvB,CAAP;AazDS,AIeb,AjB2CC,SAzCM,CAAP,KiBFO,IAAP;AJdS,AIeZ,AjB2CA;AazDW,AIeZ,AjB2CAL,kBAAc;AazDL,AIeTgJ,AjB2CI,eAAO,CiB3CC,IjB2CInN,eAAL,GAAuBI,GAAvB,CAA4Ba,GAAD,IAAS,KAAKA,GAAL,CAApC,CAAP;AazDC,AIeD,AjB2CH,Sa5GU,CAAP,KIiEOhD,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,EAAgC,aAAa;AJdvD,AIeO,AjB2CR4G,gBiB3CY,GjB2CG,EiB3CE6E,MAAL,CAAYlN,KAAZ,CAAkBmB,OAAlB,EAAJ,EACI;AJxLa,AIyLjB,AjB0CJ,eAAO,KAAKwG,WAAL,GAAmB/D,GAAnB,CAAwBoC,OAAD,IAAaA,QAAQxB,gBAAR,EAApC,CAAP;AiBzCI,AjB0CP,kBapOgByI,AI0LH0F,gBAAgB,KAAKzF,MAAL,CAAYlN,KAAZ,CACjBkB,MADiB,GAEjB6C,MAFiB,CAETd,OAAD,IAAa,KAAKiK,MAAL,CAAYlN,KAAZ,CAAkBQ,GAAlB,CAAsByC,OAAtB,IAAiC,CAFpC,EAGjBW,GAHiB,CAGZX,OAAD,IAAa,KAAKiK,MAAL,CAAYzC,GAAZ,CAAgBmI,kBAAhB,CAAmC3P,OAAnC,CAHA,CAAtB;AAIA,AjBuCRqF,mBAAerF,OAAf,EAAwB;AiBtChB,AjBuCJ,eAAO,GiBvCG4P,EjBuCExK,SiBvCS,GjBuCd,GiBvCoBvG,AjBuCAyG,IAApB,CAA0BxH,GiBvCE+R,CjBuCH,EiBvCL,CAAYH,CjBuCG5R,SAASkC,GiBvCxB,CAAvB,GjBuCG,CAAP;AiBtCI4P,AjBuCP,qBiBvCgBxR,OAAT,CAAkByK,SAAD,IAAe;AAC5BA,AjBtMY,0BiBsMFyB,WAAV,GAAwB9K,IAAxB,CAA6B,MAAM,KAAK+M,MAAL,CAAYuD,KAAZ,CAAkBjH,SAAlB,CAAnC;AACH,aAFD,KjBrMSnJ;AiBwMZ,SAbM,CAAP;AAcH;AACDkI,UAAM+G,OAAN,EAAe;AACX,aAAK1E,MAAL,CAAYnN,MAAZ,CAAmBgI,IAAnB,CAAyB,IAAG6J,QAAQ3O,OAAQ,sBAA5C;AACA,aAAKiK,MAAL,CAAYlN,KAAZ,CAAkBE,GAAlB,CAAsB0R,QAAQ3O,OAA9B,EAAuC2O,QAAQ5K,MAAR,CAAe,CAAf,CAAvC;AACH;AA7MgB","file":"index.map","sourceRoot":"built","sourcesContent":["import * as mem_cache from 'memory-cache';\nimport * as _ from 'lodash';\nexport default class Cache {\n    constructor(logger) {\n        this.cache = new mem_cache.Cache();\n        this.logger = logger;\n        this.mem = [];\n    }\n    set(k, v) {\n        if (_.indexOf(this.mem, k) === -1) {\n            this.mem.push(k);\n        }\n        this.cache.put(k, v); // , timeout, this.del(k))\n        this.logger.cache(`stored ${k} with value ${v}`);\n    }\n    get(k, d) {\n        // / FIXME more elegant error handling for this...\n        if (this.cache.get(k) === null) {\n            if (d === undefined) {\n                throw new Error('attempted to access key entry that does not exist');\n            }\n            else\n                return d;\n        }\n        this.logger.cache(`accessed ${k}`);\n        return this.cache.get(k);\n    }\n    has(k) {\n        if (this.cache.get(k) === null) {\n            this.logger.cache(`miss ${k}`);\n            return false;\n        }\n        this.logger.cache(`hit ${k}`);\n        return true;\n    }\n    del(k) {\n        // mutates the this.mem array to remove the value\n        _.remove(this.mem, (addr) => addr === k);\n        this.cache.del(k);\n        this.logger.cache(`deleted ${k}`);\n    }\n    len() {\n        return this.cache.size();\n    }\n    stored() {\n        return this.mem;\n    }\n    isEmpty() {\n        if (this.len() === 0)\n            return true;\n        return false;\n    }\n    sweepExpired() {\n        this.mem.forEach((txRequestAddress) => {\n            if (this.get(txRequestAddress, 0) === 99) {\n                // expired\n                this.del(txRequestAddress);\n            }\n        });\n    }\n}\n// The cache assigns each key (txRequestAddress) the original value of its WindowStart\n// During certain conditions it will change the value\n// 105 - Failed Execution call (Attempt again)\n// 104 - UNIMPLEMENTED\n// 103 - Failed Claim call (Attempt again)\n// 102 - Attempted Claim call (will not attempt again until result)\n// 101 - UNIMPLEMENTED\n// 100 - Successful Execution call (ready to be expired)\n//  99 - Expired (ready to be swept)\n//  -1 - Failed Execution call (will not attempt again)\n","export { default } from './Cache';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as ethWallet from 'ethereumjs-wallet';\nexport default class Wallet {\n    constructor(web3, logger) {\n        this.length = 0;\n        this.logger = logger;\n        this.nonce = 0;\n        this.web3 = web3;\n        this.walletStates = {};\n    }\n    getBalanceOf(address) {\n        return new Promise((resolve) => {\n            const balance = this.web3.eth.getBalance(address);\n            resolve(balance);\n        });\n    }\n    _findSafeIndex(pointer = 0) {\n        pointer = pointer;\n        if (this.hasOwnProperty(pointer)) {\n            return this._findSafeIndex(pointer + 1);\n        }\n        else {\n            return pointer;\n        }\n    }\n    _currentIndexes() {\n        const keys = Object.keys(this);\n        const indexes = keys\n            .map((key) => parseInt(key, 10))\n            .filter((n) => n < 9e20)\n            .slice(0, this.length);\n        return indexes;\n    }\n    create(numAccounts) {\n        for (let i = 0; i < numAccounts; i++) {\n            const wallet = ethWallet.generate();\n            this.add(wallet);\n        }\n        return this;\n    }\n    add(wallet) {\n        if (!this[wallet.getAddressString()]) {\n            const idx = this._findSafeIndex();\n            wallet.index = idx;\n            this[idx] = wallet;\n            this[wallet.getAddressString()] = wallet;\n            this[wallet.getAddressString().toLowerCase()] = wallet;\n            this.length++;\n            return wallet;\n        }\n        return this[wallet.getAddressString()];\n    }\n    rm(addressOrIndex) {\n        const wallet = this[addressOrIndex];\n        if (wallet && wallet.getAddressString()) {\n            delete this[wallet.getAddressString()];\n            delete this[wallet.getAddressString().toLowerCase()];\n            delete this[wallet.index];\n            this.length--;\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        const indexes = this._currentIndexes();\n        indexes.forEach((idx) => {\n            this.rm(idx);\n        });\n        return this;\n    }\n    encrypt(password, opts) {\n        const indexes = this._currentIndexes();\n        return indexes.map((idx) => this[idx].toV3(password, opts));\n    }\n    loadPrivateKeys(privateKeys) {\n        privateKeys.forEach((privateKey) => {\n            const wallet = ethWallet.fromPrivateKey(Buffer.from(privateKey, 'hex'));\n            if (wallet) {\n                this.add(wallet);\n            }\n            else {\n                throw new Error(\"Couldn't load private key.\");\n            }\n        });\n    }\n    decrypt(encryptedKeystores, password) {\n        encryptedKeystores.forEach((keystore) => {\n            const wallet = ethWallet.fromV3(keystore, password, true);\n            if (wallet) {\n                this.add(wallet);\n            }\n            else {\n                throw new Error(\"Couldn't decrypt keystore. Wrong password?\");\n            }\n        });\n    }\n    /**\n     * sendFromNext will send a transaction from the account in this wallet that is next according to this.nonce\n     * @param {TransactionParams} opts {to, value, gas, gasPrice, data}\n     * @returns {Promise<string>} A promise which will resolve to the transaction hash\n     */\n    sendFromNext(opts) {\n        const next = this.nonce++ % this.length;\n        return this.sendFromIndex(next, opts);\n    }\n    getNonce(account) {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.getTransactionCount(account, (err, res) => {\n                if (err)\n                    reject(err);\n                resolve(res);\n            });\n        });\n    }\n    sendRawTransaction(tx) {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.sendRawTransaction('0x'.concat(tx.serialize().toString('hex')), (err, res) => {\n                if (err)\n                    reject(err);\n                resolve(res);\n            });\n        });\n    }\n    getTransactionReceipt(hash, from) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transactionReceiptAsync;\n            const _this = this;\n            transactionReceiptAsync = function (hash, resolve, reject) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const getTransactionReceipt = (hash) => {\n                            return new Promise((resolve) => {\n                                _this.web3.eth.getTransactionReceipt(hash, (err, res) => {\n                                    if (!err)\n                                        resolve(res);\n                                });\n                            });\n                        };\n                        var receipt = yield getTransactionReceipt(hash);\n                        if (receipt == null) {\n                            setTimeout(function () {\n                                transactionReceiptAsync(hash, resolve, reject);\n                            }, 500);\n                        }\n                        else {\n                            resolve({ receipt, from });\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n            };\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                yield transactionReceiptAsync(hash, resolve, reject);\n            }));\n        });\n    }\n    signTransaction(from, nonce, opts) {\n        return new Promise((resolve) => {\n            const params = {\n                nonce,\n                from,\n                to: opts.to,\n                gas: this.web3.toHex(opts.gas),\n                gasPrice: this.web3.toHex(opts.gasPrice),\n                value: this.web3.toHex(opts.value),\n                data: opts.data\n            };\n            const ethTx = require('ethereumjs-tx');\n            const tx = new ethTx(params);\n            const privKey = this[from].privKey;\n            tx.sign(Buffer.from(privKey, 'hex'));\n            resolve(tx);\n        });\n    }\n    isWalletAbleToSendTx(idx) {\n        if (idx >= this.length) {\n            throw new Error('Index is outside range of addresses.');\n        }\n        const from = this.getAccounts()[idx].getAddressString();\n        return (!this.walletStates[from] || !this.walletStates[from].sendingTxInProgress);\n    }\n    isNextAccountFree() {\n        return this.isWalletAbleToSendTx(this.nonce % this.length);\n    }\n    sendFromIndex(idx, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (idx >= this.length) {\n                throw new Error('Index is outside range of addresses.');\n            }\n            const from = this.getAccounts()[idx].getAddressString();\n            const balance = yield this.getBalanceOf(from);\n            if (balance.eq(0)) {\n                if (this.logger) {\n                    this.logger.info(`Account ${from} has not enough funds to send transaction.`);\n                }\n                return { ignore: true };\n            }\n            const nonce = yield this.getNonce(from);\n            const signedTx = yield this.signTransaction(from, nonce, opts);\n            if (this.walletStates[from] &&\n                this.walletStates[from].sendingTxInProgress) {\n                if (this.logger) {\n                    this.logger.debug(`Sending transaction is already in progress. Please wait for account: \"${from}\" to complete tx.`);\n                }\n                return { ignore: true };\n            }\n            let receipt;\n            let ignore = false;\n            try {\n                if (!this.walletStates[from]) {\n                    this.walletStates[from] = {};\n                }\n                this.walletStates[from].sendingTxInProgress = true;\n                const hash = yield this.sendRawTransaction(signedTx);\n                receipt = yield this.getTransactionReceipt(hash, from);\n            }\n            catch (error) {\n                if (this.logger) {\n                    this.logger.debug(`Sending transaction failed.`);\n                }\n                ignore = true;\n            }\n            finally {\n                this.walletStates[from].sendingTxInProgress = false;\n            }\n            return Object.assign(receipt, { ignore });\n        });\n    }\n    getAccounts() {\n        return this._currentIndexes().map((idx) => this[idx]);\n    }\n    getAddresses() {\n        return this.getAccounts().map((account) => account.getAddressString());\n    }\n    isKnownAddress(address) {\n        return this.getAddresses().some((addr) => addr === address);\n    }\n}\n","export { default } from './Wallet';\n","export class DefaultLogger {\n    cache(msg) {\n        this.formatPrint(msg, 'CACHE');\n    }\n    debug(msg) {\n        this.formatPrint(msg, 'DEBUG');\n    }\n    error(msg) {\n        this.formatPrint(msg, 'ERROR');\n    }\n    info(msg) {\n        this.formatPrint(msg, 'INFO');\n    }\n    formatPrint(msg, kind) {\n        console.log(kind, this.timestamp(), msg);\n    }\n    timestamp() {\n        return Math.floor(Date.now() / 1000);\n    }\n}\n","export { DefaultLogger } from './DefaultLogger';\n","export default class W3Util {\n    constructor(web3) {\n        this.web3 = web3;\n    }\n    estimateGas(opts) {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.estimateGas(opts, (e, r) => {\n                if (e)\n                    reject(e);\n                else\n                    resolve(r);\n            });\n        });\n    }\n    networkGasPrice() {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.getGasPrice((e, r) => {\n                if (e)\n                    reject(e);\n                else\n                    resolve(r);\n            });\n        });\n    }\n    getReceipt(txHash) {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.getTransactionReceipt(txHash, (e, r) => {\n                if (e)\n                    reject(e);\n                else\n                    resolve(r);\n            });\n        });\n    }\n    getBlockNumber() {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.getBlockNumber((e, r) => {\n                if (e)\n                    reject(e);\n                else\n                    resolve(r);\n            });\n        });\n    }\n    getBlock(number = 'latest') {\n        return new Promise((resolve, reject) => {\n            this.web3.eth.getBlock(number, (err, block) => {\n                if (!err)\n                    if (block)\n                        resolve(block);\n                    else\n                        reject(`Returned block ${number} is null`);\n                else\n                    reject(err);\n            });\n        });\n    }\n    isWatchingEnabled() {\n        return new Promise((resolve) => {\n            this.web3.currentProvider.sendAsync({\n                jsonrpc: '2.0',\n                id: 1,\n                method: 'eth_getFilterLogs',\n                params: []\n            }, (err) => {\n                if (err !== null) {\n                    resolve(false);\n                }\n                resolve(true);\n            });\n        });\n    }\n}\n","import Cache from '../Cache';\nimport Wallet from '../Wallet';\nimport { DefaultLogger } from '../Logger';\nimport W3Util from '../Util';\nexport default class Config {\n    constructor(params) {\n        this.autostart = params.autostart || true;\n        this.ms = params.ms || 4000;\n        this.scanSpread = params.scanSpread || 50;\n        this.walletStoresAsPrivateKeys = params.walletStoresAsPrivateKeys;\n        this.logger = params.logger || new DefaultLogger();\n        this.cache = new Cache(this.logger);\n        if (params.eac && params.factory && params.provider && params.web3) {\n            this.eac = params.eac;\n            this.factory = params.factory;\n            this.provider = params.provider;\n            this.web3 = params.web3;\n        }\n        else {\n            throw new Error('Passed in Config params are incomplete! Unable to start TimeNode. Quitting..');\n        }\n        if (params.walletStores &&\n            params.walletStores.length &&\n            params.walletStores.length > 0) {\n            this.wallet = new Wallet(this.web3, this.logger);\n            params.walletStores = params.walletStores.map((store) => {\n                if (typeof store === 'object') {\n                    return JSON.stringify(store);\n                }\n                return store;\n            });\n            if (this.walletStoresAsPrivateKeys) {\n                this.wallet.loadPrivateKeys(params.walletStores);\n            }\n            else {\n                this.wallet.decrypt(params.walletStores, params.password);\n            }\n        }\n        else {\n            this.wallet = null;\n        }\n        this.statsDb = params.statsDb;\n        this.util = new W3Util(this.web3);\n        this.economicStrategy = params.economicStrategy;\n    }\n}\n","export { default } from './Config';\n","const isExecuted = (receipt) => {\n    if (receipt) {\n        const executedEvent = '0x3e504bb8b225ad41f613b0c3c4205cdd752d1615b4d77cd1773417282fcfb5d9';\n        return receipt.logs[0].topics.indexOf(executedEvent) > -1;\n    }\n    return false;\n};\nconst isTransactionStatusSuccessful = (status) => {\n    return status && [1, '0x1', '0x01'].indexOf(status) !== -1;\n};\nexport { isExecuted, isTransactionStatusSuccessful };\n","export var Networks;\n(function (Networks) {\n    Networks[Networks[\"Private\"] = 0] = \"Private\";\n    Networks[Networks[\"Mainnet\"] = 1] = \"Mainnet\";\n    Networks[Networks[\"Morden\"] = 2] = \"Morden\";\n    Networks[Networks[\"Ropsten\"] = 3] = \"Ropsten\";\n    Networks[Networks[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Networks[Networks[\"Kovan\"] = 42] = \"Kovan\";\n})(Networks || (Networks = {}));\n","export var TxStatus;\n(function (TxStatus) {\n    TxStatus[TxStatus[\"BeforeClaimWindow\"] = 0] = \"BeforeClaimWindow\";\n    TxStatus[TxStatus[\"ClaimWindow\"] = 1] = \"ClaimWindow\";\n    TxStatus[TxStatus[\"FreezePeriod\"] = 2] = \"FreezePeriod\";\n    TxStatus[TxStatus[\"ExecutionWindow\"] = 3] = \"ExecutionWindow\";\n    TxStatus[TxStatus[\"Executed\"] = 4] = \"Executed\";\n    TxStatus[TxStatus[\"Missed\"] = 5] = \"Missed\";\n    TxStatus[TxStatus[\"Done\"] = 6] = \"Done\";\n})(TxStatus || (TxStatus = {}));\n","export var FnSignatures;\n(function (FnSignatures) {\n    FnSignatures[\"claim\"] = \"0x4e71d92d\";\n    FnSignatures[\"execute\"] = \"0x61461954\";\n})(FnSignatures || (FnSignatures = {}));\n","export { Networks } from './Networks';\nexport { TxStatus } from './TxStatus';\nexport { FnSignatures } from './FnSignatures';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FnSignatures } from '../Enum';\n/**\n * Uses the Parity specific RPC request `parity_pendingTransactions` to search\n * for pending transactions in the transaction pool.\n * @param {TransactionRequest} txRequest\n * @param {string} type (optional) Type of pending request: claim,execute.\n * @param {boolean} checkGasPrice (optional, default: true) Check if transaction's gasPrice is sufficient for Network.\n * @param {number} exactPrice (optional) Expected gasPrice.\n * @returns {Promise<boolean>} True if a pending transaction to this address exists.\n */\nconst _hasPendingParity = (conf, txRequest, opts) => __awaiter(this, void 0, void 0, function* () {\n    opts.checkGasPrice = opts.checkGasPrice === undefined ? true : opts.checkGasPrice;\n    const provider = conf.web3.currentProvider;\n    return new Promise((resolve, reject) => {\n        provider.sendAsync({\n            jsonrpc: '2.0',\n            method: 'parity_pendingTransactions',\n            params: [],\n            id: 0o7\n        }, (err, res) => __awaiter(this, void 0, void 0, function* () {\n            if (err)\n                reject(err);\n            for (const count in res.result) {\n                if (res.result[count].to === txRequest.address) {\n                    const withValidGasPrice = res.result[count] && (!opts.checkGasPrice || (yield hasValidGasPrice(conf.web3, res.result[count], opts.exactPrice)));\n                    if (res.result[count] && isOfType(res.result[count], opts.type) && withValidGasPrice) {\n                        resolve(true);\n                    }\n                }\n            }\n            resolve(false);\n        }));\n    });\n});\n/**\n * Uses the Geth specific RPC request `txpool_content` to search\n * for pending transactions in the transaction pool.\n * @param {TransactionRequest} txRequest\n * @param {string} type (optional) Type of pending request: claim,execute.\n * @param {boolean} checkGasPrice (optional, default: true) Check if transaction's gasPrice is sufficient for Network.\n * @param {number} exactPrice (optional) Expected gasPrice.\n * @returns {Promise<object>} Transaction, if a pending transaction to this address exists.\n */\nconst _hasPendingGeth = (conf, txRequest, opts) => {\n    opts.checkGasPrice = opts.checkGasPrice === undefined ? true : opts.checkGasPrice;\n    const provider = conf.web3.currentProvider;\n    return new Promise((resolve, reject) => {\n        provider.send({\n            jsonrpc: '2.0',\n            method: 'txpool_content',\n            params: [],\n            id: 0o7\n        }, (err, res) => __awaiter(this, void 0, void 0, function* () {\n            if (err)\n                reject(err);\n            for (const account in res.result.pending) {\n                for (const nonce in res.result.pending[account]) {\n                    if (res.result.pending[account][nonce].to === txRequest.address) {\n                        const withValidGasPrice = res.result.pending[account][nonce] && (!opts.checkGasPrice || (yield hasValidGasPrice(conf.web3, res.result.pending[account][nonce], opts.exactPrice)));\n                        if (res.result.pending[account][nonce] && isOfType(res.result.pending[account][nonce], opts.type) && withValidGasPrice) {\n                            resolve(true);\n                        }\n                    }\n                }\n            }\n            resolve(false);\n        }));\n    });\n};\n/**\n * Uses the Geth specific RPC request `txpool_content` to search\n * for pending transactions in the transaction pool.\n * @param {Web3} web3 the Web3 instance to use\n * @param {TransactionReceipt} transaction Ethereum transaction receipt\n * @param {number} exactPrice (optional) Expected gasPrice.\n * @returns {Promise<boolean>} Transaction, if a pending transaction to this address exists.\n */\nconst hasValidGasPrice = (web3, transaction, exactPrice) => __awaiter(this, void 0, void 0, function* () {\n    if (exactPrice) {\n        return exactPrice.valueOf() == transaction.gasPrice.valueOf();\n    }\n    const spread = 0.3;\n    let currentGasPrice;\n    yield new Promise((resolve, reject) => {\n        web3.eth.getGasPrice((err, res) => {\n            if (err)\n                reject(err);\n            currentGasPrice = res;\n            resolve(true);\n        });\n    });\n    return currentGasPrice && (spread * currentGasPrice.valueOf()) <= transaction.gasPrice.valueOf();\n});\n/**\n * Uses the Geth specific RPC request `txpool_content` to search\n * for pending transactions in the transaction pool.\n * @param {TransactionReceipt} transaction Ethereum transaction receipt\n * @param {string} type Type of pending request: claim,execute.\n * @returns {Promise<boolean>} True if a pending transaction to this address exists.\n */\nconst isOfType = (transaction, type) => {\n    if (transaction && !type) {\n        return true;\n    }\n    return transaction.input == FnSignatures[type];\n};\n/**\n * Depening on the client, routes the correct RPC request to return whether\n * a TransactionRequest has a pending transaction in the transaction pool.\n * @param {Config} conf Config object.\n * @param {TransactionRequest} txRequest Transaction Request object to check.\n * @param {string} type (optional) Type of pending request: claim,execute.\n * @param {boolean} checkGasPrice (optional, default: true) Check if transaction's gasPrice is sufficient for Network.\n * @param {number} exactPrice (optional) Expected gasPrice to compare.\n */\nconst hasPending = (conf, txRequest, opts) => {\n    if (conf.client == 'parity') {\n        return _hasPendingParity(conf, txRequest, opts);\n    }\n    else if (conf.client == 'geth') {\n        return _hasPendingGeth(conf, txRequest, opts);\n    }\n};\nexport default hasPending;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from 'bignumber.js';\nimport { isExecuted, isTransactionStatusSuccessful } from './Helpers';\nimport hasPending from './Pending';\nexport function shortenAddress(address) {\n    return `${address.slice(0, 6)}...${address.slice(address.length - 5, address.length)}`;\n}\nexport default class Actions {\n    constructor(config) {\n        this.config = config;\n    }\n    claim(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const requiredDeposit = txRequest.requiredDeposit;\n            // TODO make this a constant\n            const claimData = txRequest.claimData;\n            // Gas needed ~ 89k, this provides a buffer... just in case\n            const gasEstimate = 120000;\n            const opts = {\n                to: txRequest.address,\n                value: requiredDeposit,\n                gas: gasEstimate,\n                gasPrice: yield this.config.util.networkGasPrice(),\n                data: claimData\n            };\n            if (yield hasPending(this.config, txRequest, { type: 'claim' })) {\n                return {\n                    ignore: true\n                };\n            }\n            if (this.config.wallet.isNextAccountFree()) {\n                try {\n                    // this.config.logger.debug(`[${txRequest.address}] Sending claim transactions with opts: ${JSON.stringify(opts)}`);\n                    const { receipt, from, ignore } = yield this.config.wallet.sendFromNext(opts);\n                    // this.config.logger.debug(`[${txRequest.address}] Received receipt: ${JSON.stringify(receipt)}\\n And from: ${from}`);\n                    if (ignore) {\n                        return;\n                    }\n                    if (isTransactionStatusSuccessful(receipt.status)) {\n                        yield txRequest.refreshData();\n                        const cost = new BigNumber(receipt.gasUsed).mul(new BigNumber(txRequest.data.txData.gasPrice));\n                        this.config.statsDb.updateClaimed(from, cost);\n                        return txRequest.isClaimed;\n                    }\n                    return false;\n                }\n                catch (error) {\n                    this.config.logger.debug(`Actions::claim(${shortenAddress(txRequest.address)})::sendFromIndex error: ${error}`);\n                }\n            }\n            else {\n                this.config.logger.debug(`Actions::claim(${shortenAddress(txRequest.address)})::Wallet with index 0 is not able to send tx.`);\n            }\n            //TODO get transaction object from txHash\n        });\n    }\n    execute(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const gasToExecute = txRequest.callGas\n                .add(180000)\n                .div(64)\n                .times(65)\n                .round();\n            // TODO Check that the gasToExecue < gasLimit of latest block w/ some margin\n            // TODO make this a constant\n            const executeData = txRequest.executeData;\n            const claimIndex = this.config.wallet\n                .getAddresses()\n                .indexOf(txRequest.claimedBy);\n            this.config.logger.debug(`Claim Index ${claimIndex}`);\n            const opts = {\n                to: txRequest.address,\n                value: 0,\n                gas: gasToExecute,\n                gasPrice: txRequest.gasPrice,\n                data: executeData\n            };\n            if (yield hasPending(this.config, txRequest, { type: 'execute', exactPrice: opts.gasPrice })) {\n                return {\n                    ignore: true\n                };\n            }\n            if (claimIndex !== -1) {\n                const { receipt, from, ignore } = yield this.config.wallet.sendFromIndex(claimIndex, opts);\n                if (ignore) {\n                    return;\n                }\n                if (isTransactionStatusSuccessful(receipt.status)) {\n                    if (isExecuted(receipt)) {\n                        yield txRequest.refreshData();\n                        const data = receipt.logs[0].data;\n                        const bounty = this.config.web3.toDecimal(data.slice(0, 66));\n                        this.config.statsDb.updateExecuted(from, bounty, new BigNumber(0));\n                    }\n                    const cost = new BigNumber(receipt.gasUsed).mul(new BigNumber(txRequest.data.txData.gasPrice));\n                    this.config.statsDb.updateExecuted(from, new BigNumber(0), cost);\n                    return txRequest.wasSuccessful;\n                }\n                return false;\n            }\n            if (this.config.wallet.isNextAccountFree()) {\n                const { receipt, from, ignore } = yield this.config.wallet.sendFromNext(opts);\n                if (ignore) {\n                    return;\n                }\n                if (isTransactionStatusSuccessful(receipt.status)) {\n                    if (isExecuted(receipt)) {\n                        yield txRequest.refreshData();\n                        const data = receipt.logs[0].data;\n                        const bounty = this.config.web3.toDecimal(data.slice(0, 66));\n                        this.config.statsDb.updateExecuted(from, bounty, new BigNumber(0));\n                    }\n                    const cost = new BigNumber(receipt.gasUsed).mul(new BigNumber(txRequest.data.txData.gasPrice));\n                    this.config.statsDb.updateExecuted(from, new BigNumber(0), cost);\n                    return txRequest.wasSuccessful;\n                }\n                return false;\n            }\n            else {\n                this.config.logger.debug('Actions.execute : No available wallet to send a transaction.');\n            }\n        });\n    }\n    cleanup(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw Error('Not implemented according to latest EAC changes.');\n            // Check if there is any ether left in a txRequest.\n            const txRequestBalance = yield txRequest.getBalance();\n            if (txRequestBalance.equals(0)) {\n                return true;\n            }\n            if (txRequest.isCancelled) {\n                return true;\n            }\n            else {\n                // Cancel it!\n                const gasEstimate = yield this.config.util.estimateGas({\n                    to: txRequest.address,\n                    data: txRequest.cancelData\n                });\n                // Get latest block gas price.\n                const estGasPrice = yield this.config.util.networkGasPrice();\n                const gasCostToCancel = estGasPrice.times(gasEstimate);\n                const opts = {\n                    to: txRequest.address,\n                    value: 0,\n                    gas: gasEstimate + 21000,\n                    gasPrice: estGasPrice,\n                    data: txRequest.cancelData // TODO make constant\n                };\n                let transactionHash;\n                // Check to see if any of our accounts is the owner.\n                const ownerIndex = this.config.wallet\n                    .getAddresses()\n                    .indexOf(txRequest.owner);\n                if (ownerIndex !== -1) {\n                    const { receipt, from, ignore } = yield this.config.wallet.sendFromIndex(ownerIndex, opts);\n                    if (ignore) {\n                        return;\n                    }\n                }\n                else {\n                    if (gasCostToCancel.greaterThan(txRequestBalance)) {\n                        // The txRequest doesn't have high enough balance to compensate.\n                        // It's now considered dust.\n                        return true;\n                    }\n                    const { receipt, from, ignore } = yield this.config.wallet.sendFromNext(opts);\n                    if (ignore) {\n                        return;\n                    }\n                }\n                //TODO get tx Obj from hash\n            }\n        });\n    }\n}\n","export { default } from './Actions';\n","export const BucketSize = {\n    block: 240,\n    timestamp: 3600\n};\n","export { BucketSize } from './consts';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BucketSize } from '../Buckets';\nexport default class {\n    /**\n     * Creates a new Scanner instance. The scanner serves as the top level\n     * entry point for the EAC-JS TimeNode. You still need to call the\n     * `start()` function before the TimeNode becomes active.\n     * @param {number} ms Milliseconds of the scan interval.\n     * @param {Config} config The TimeNode Config object.\n     */\n    constructor(config, router) {\n        this.buckets = {\n            currentBuckets: {\n                blockBucket: -1,\n                timestampBucket: -1\n            },\n            nextBuckets: {\n                blockBucket: -1,\n                timestampBucket: -1\n            }\n        };\n        this.eventWatchers = {};\n        this.config = config;\n        this.util = config.util;\n        this.scanning = false;\n        this.router = router;\n        this.requestFactory = config.eac.requestFactory();\n    }\n    runAndSetInterval(fn, interval) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wrapped = () => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield fn();\n                }\n                catch (e) {\n                    this.config.logger.error(e);\n                }\n            });\n            yield wrapped();\n            return setInterval(wrapped, interval);\n        });\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield this.util.isWatchingEnabled()) {\n                // Watching is enabled! start watching the chain.\n                this.config.logger.info('Watching ENABLED');\n                this.chainScanner = yield this.runAndSetInterval(() => this.watchBlockchain(), 5 * 60 * 1000);\n            }\n            else {\n                // Watchin disabled. We use old-school methods.\n                this.config.logger.info('Watching DISABLED');\n                this.config.logger.info('-Initiating Backup Scanner-');\n                this.chainScanner = yield this.runAndSetInterval(() => this.backupScanBlockchain(), this.config.ms);\n            }\n            // Create the interval for processing the transaction requests in cache.\n            this.cacheScanner = yield this.runAndSetInterval(() => this.scanCache(), this.config.ms);\n            // Mark that we've started.\n            // this.config.logger.info('Scanner STARTED');\n            this.scanning = true;\n            return this.scanning;\n        });\n    }\n    stop() {\n        if (this.scanning) {\n            // Clear scanning intervals.\n            clearInterval(this.cacheScanner);\n            clearInterval(this.chainScanner);\n            // Mark that we've stopped.\n            this.config.logger.info('Scanner STOPPED');\n            this.scanning = false;\n        }\n        return this.scanning;\n    }\n    /**\n     * Performs four checks:\n     *  - The TxRequest is before claim window.\n     *  - The TxRequest is in claim window.\n     *  - The TxRequest is in freeze period.\n     *  - The TxRequest is in execution window.\n     * These are the four conditions in which the TxRequest is upcoming,\n     * and should be stored in a TimeNodes cache.\n     * @param txRequest Transaction Request Object\n     */\n    isUpcoming(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return ((yield txRequest.beforeClaimWindow()) ||\n                (yield txRequest.inClaimWindow()) ||\n                (yield txRequest.inFreezePeriod()) ||\n                (yield txRequest.inExecutionWindow()));\n        });\n    }\n    //TODO move this to requestFactory instance\n    getCurrentBuckets(latest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const reqFactory = yield this.requestFactory;\n            return {\n                blockBucket: reqFactory.calcBucket(latest.number, 1),\n                timestampBucket: reqFactory.calcBucket(latest.timestamp, 2)\n            };\n        });\n    }\n    getNextBuckets(latest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const reqFactory = yield this.requestFactory;\n            const nextBlockInterval = latest.number + BucketSize.block;\n            const nextTsInterval = latest.timestamp + BucketSize.timestamp;\n            return {\n                blockBucket: reqFactory.calcBucket(nextBlockInterval, 1),\n                timestampBucket: reqFactory.calcBucket(nextTsInterval, 2)\n            };\n        });\n    }\n    getBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const latest = yield this.util.getBlock('latest');\n            return {\n                currentBuckets: yield this.getCurrentBuckets(latest),\n                nextBuckets: yield this.getNextBuckets(latest)\n            };\n        });\n    }\n    handleRequest(request) {\n        if (!this.isValid(request.address)) {\n            throw new Error(`[${request.address}] NOT VALID`);\n        }\n        this.config.logger.info(`[${request.address}] Discovered`);\n        if (!this.config.cache.has(request.address)) {\n            this.store(request);\n        }\n    }\n    backupScanBlockchain() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO only init reqFactory once, so check here with a function before calling again\n            const reqFactory = yield this.requestFactory;\n            const { currentBuckets, nextBuckets } = yield this.getBuckets();\n            const handleRequest = this.handleRequest.bind(this);\n            // TODO: extract this out\n            (yield reqFactory.getRequestsByBucket(currentBuckets.blockBucket)).map(handleRequest);\n            (yield reqFactory.getRequestsByBucket(currentBuckets.timestampBucket)).map(handleRequest);\n            (yield reqFactory.getRequestsByBucket(nextBuckets.blockBucket)).map(handleRequest);\n            (yield reqFactory.getRequestsByBucket(nextBuckets.timestampBucket)).map(handleRequest);\n        });\n    }\n    stopWatcher(bucket) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const watcher = this.eventWatchers[bucket];\n            if (watcher !== undefined) {\n                const reqFactory = yield this.requestFactory;\n                yield reqFactory.stopWatch(watcher);\n                delete this.eventWatchers[bucket];\n            }\n        });\n    }\n    watchRequestsByBucket(bucket, previousBucket) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const reqFactory = yield this.requestFactory;\n            const handleRequest = this.handleRequest.bind(this);\n            if (bucket !== previousBucket) {\n                this.stopWatcher(previousBucket);\n                const watcher = yield reqFactory.watchRequestsByBucket(bucket, handleRequest);\n                this.eventWatchers[bucket] = watcher;\n            }\n        });\n    }\n    watchBlockchain() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buckets = yield this.getBuckets();\n            // Start watching the current buckets right away.\n            yield this.watchRequestsByBucket(buckets.currentBuckets.blockBucket, this.buckets.currentBuckets.blockBucket);\n            yield this.watchRequestsByBucket(buckets.nextBuckets.blockBucket, this.buckets.nextBuckets.blockBucket);\n            yield this.watchRequestsByBucket(buckets.currentBuckets.timestampBucket, this.buckets.currentBuckets.timestampBucket);\n            yield this.watchRequestsByBucket(buckets.nextBuckets.timestampBucket, this.buckets.nextBuckets.timestampBucket);\n            this.buckets = buckets;\n        });\n    }\n    isValid(requestAddress) {\n        if (requestAddress === this.config.eac.Constants.NULL_ADDRESS) {\n            this.config.logger.debug('Warning.. Transaction Request with NULL_ADDRESS found.');\n            return false;\n        }\n        else if (!this.config.eac.Util.checkValidAddress(requestAddress)) {\n            // This should, conceivably, never happen unless there is a bug in eac.js-lib.\n            throw new Error(`[${requestAddress}] Received invalid response from Request Tracker - CRITICAL BUG`);\n        }\n        return true;\n    }\n    // TODO meaningful return value\n    scanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.config.cache.isEmpty())\n                return;\n            // Get all transaction requests stored in cache and turn them into TransactionRequest objects.\n            const allTxRequests = this.config.cache\n                .stored()\n                .filter((address) => this.config.cache.get(address) > 0)\n                .map((address) => this.config.eac.transactionRequest(address));\n            // Get fresh data on our transaction requests and route them into appropriate action.\n            const requests = yield Promise.all(allTxRequests);\n            requests.forEach((txRequest) => {\n                txRequest.refreshData().then(() => this.router.route(txRequest));\n            });\n        });\n    }\n    store(request) {\n        this.config.logger.info(`[${request.address}] Inputting to cache`);\n        this.config.cache.set(request.address, request.params[7]);\n    }\n}\n","export { default } from './Scanner';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as Bb from 'bluebird';\n/**\n * Checks whether a transaction requires a deposit that's higher than a\n * user-set maximum deposit limit.\n * @param {TransactionRequest} txRequest Transaction Request object to check.\n * @param {IEconomicStrategy} economicStrategy Economic strategy configuration object.\n */\nconst exceedsMaxDeposit = (txRequest, economicStrategy) => {\n    const requiredDeposit = txRequest.requiredDeposit;\n    const maxDeposit = economicStrategy.maxDeposit;\n    return requiredDeposit.gt(maxDeposit);\n};\n/**\n * Checks if the balance of the TimeNode is above a set limit.\n * @param {IEconomicStrategy} economicStrategy Economic strategy configuration object.\n * @param {Config} config TimeNode configuration object.\n */\nconst isAboveMinBalanceLimit = (economicStrategy, config) => __awaiter(this, void 0, void 0, function* () {\n    const minBalance = economicStrategy.minBalance;\n    const currentBalance = yield Bb.fromCallback((callback) => config.web3.eth.getBalance(config.wallet.getAddresses()[0], callback));\n    return currentBalance.gt(minBalance);\n});\n/**\n * Compares the profitability user settings and checks if the TimeNode\n * should claim a transaction.\n * @param {TransactionRequest} txRequest Transaction Request object to check.\n * @param {IEconomicStrategy} economicStrategy Economic strategy configuration object.\n */\nconst isProfitable = (txRequest, economicStrategy) => __awaiter(this, void 0, void 0, function* () {\n    const paymentModifier = yield txRequest.claimPaymentModifier();\n    const reward = txRequest.bounty.times(paymentModifier);\n    const minProfitability = economicStrategy.minProfitability;\n    if (minProfitability.gt(0)) {\n        return reward.lt(minProfitability);\n    }\n    return true;\n});\nconst shouldClaimTx = (txRequest, config) => __awaiter(this, void 0, void 0, function* () {\n    const profitable = yield isProfitable(txRequest, config.economicStrategy);\n    if (!profitable)\n        return false;\n    const enoughBalance = yield isAboveMinBalanceLimit(config.economicStrategy, config);\n    if (!enoughBalance)\n        return false;\n    const exceedsDepositLimit = exceedsMaxDeposit(txRequest, config.economicStrategy);\n    return profitable && enoughBalance && !exceedsDepositLimit;\n});\nexport { shouldClaimTx };\n","export { shouldClaimTx } from './EconomicStrategyHelpers';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TxStatus } from '../Enum';\nimport { shouldClaimTx } from '../EconomicStrategy';\nexport class TEMPORAL_UNIT {\n}\nTEMPORAL_UNIT.BLOCK = 1;\nTEMPORAL_UNIT.TIMESTAMP = 2;\nexport default class Router {\n    constructor(config, actions) {\n        this.txRequestStates = {};\n        this.transitions = {};\n        this.actions = actions;\n        this.config = config;\n        this.util = config.util;\n        this.transitions[TxStatus.BeforeClaimWindow] = this.beforeClaimWindow.bind(this);\n        this.transitions[TxStatus.ClaimWindow] = this.claimWindow.bind(this);\n        this.transitions[TxStatus.FreezePeriod] = this.freezePeriod.bind(this);\n        this.transitions[TxStatus.ExecutionWindow] = this.executionWindow.bind(this);\n        this.transitions[TxStatus.Executed] = this.executed.bind(this);\n        this.transitions[TxStatus.Missed] = this.missed.bind(this);\n        this.transitions[TxStatus.Done] = (txRequest) => {\n            this.config.logger.info(`[${txRequest.address}] Finished. Deleting from cache...`);\n            this.config.cache.del(txRequest.address);\n            return TxStatus.Done;\n        };\n    }\n    beforeClaimWindow(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (txRequest.isCancelled) {\n                // TODO Status.CleanUp?\n                return TxStatus.Executed;\n            }\n            if (yield txRequest.beforeClaimWindow()) {\n                return TxStatus.BeforeClaimWindow;\n            }\n            return TxStatus.ClaimWindow;\n        });\n    }\n    claimWindow(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(yield txRequest.inClaimWindow())) {\n                return TxStatus.FreezePeriod;\n            }\n            if (txRequest.isClaimed) {\n                return TxStatus.FreezePeriod;\n            }\n            const shouldClaim = yield shouldClaimTx(txRequest, this.config);\n            if (shouldClaim) {\n                try {\n                    const claimed = yield this.actions.claim(txRequest);\n                    if (claimed === true) {\n                        this.config.logger.info(`${txRequest.address} claimed`);\n                    }\n                }\n                catch (e) {\n                    this.config.logger.error(`${txRequest.address} claiming failed`);\n                    // TODO handle gracefully?\n                    throw new Error(e);\n                }\n            }\n            else {\n                this.config.logger.info(`[${txRequest.address}] not profitable to claim.`);\n                this.config.logger.debug(`ECONOMIC STRATEGY: ${JSON.stringify(this.config.economicStrategy)}`);\n            }\n            return TxStatus.ClaimWindow;\n        });\n    }\n    freezePeriod(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield txRequest.inFreezePeriod()) {\n                return TxStatus.FreezePeriod;\n            }\n            if (yield txRequest.inExecutionWindow()) {\n                return TxStatus.ExecutionWindow;\n            }\n            return TxStatus.FreezePeriod;\n        });\n    }\n    inReservedWindowAndNotClaimedLocally(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inReserved = yield txRequest.inReservedWindow();\n            return inReserved && txRequest.isClaimed && !this.isLocalClaim(txRequest);\n        });\n    }\n    executionWindow(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (txRequest.wasCalled) {\n                return TxStatus.Executed;\n            }\n            if (yield this.isTransactionMissed(txRequest)) {\n                return TxStatus.Missed;\n            }\n            if (yield this.inReservedWindowAndNotClaimedLocally(txRequest)) {\n                return TxStatus.ExecutionWindow;\n            }\n            try {\n                const executed = yield this.actions.execute(txRequest);\n                if (executed === true) {\n                    this.config.logger.info(`${txRequest.address} executed`);\n                    return TxStatus.Executed;\n                }\n            }\n            catch (e) {\n                this.config.logger.error(`${txRequest.address} execution failed`);\n                //TODO handle gracefully?\n                throw new Error(e);\n            }\n            return TxStatus.ExecutionWindow;\n        });\n    }\n    isExecuted(receipt) {\n        if (receipt) {\n            const executedEvent = '0x3e504bb8b225ad41f613b0c3c4205cdd752d1615b4d77cd1773417282fcfb5d9';\n            return receipt.logs[0].topics.indexOf(executedEvent) > -1;\n        }\n        return false;\n    }\n    executed(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /**\n             * We don't cleanup because cleanup needs refactor according to latest logic in EAC\n             * https://github.com/ethereum-alarm-clock/ethereum-alarm-clock/blob/master/contracts/Library/RequestLib.sol#L433\n             *\n             * await this.actions.cleanup(txRequest);\n             */\n            //\n            return TxStatus.Done;\n        });\n    }\n    missed(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO cleanup\n            return TxStatus.Done;\n        });\n    }\n    isTransactionMissed(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const afterExecutionWindow = parseInt(txRequest.executionWindowEnd) <= parseInt(yield txRequest.now());\n            return Boolean(afterExecutionWindow && !txRequest.wasCalled);\n        });\n    }\n    isLocalClaim(txRequest) {\n        let localClaim;\n        // TODO add function on config `hasWallet(): boolean`\n        if (this.config.wallet) {\n            localClaim = this.config.wallet.isKnownAddress(txRequest.claimedBy);\n        }\n        else {\n            localClaim = txRequest.isClaimedBy(this.config.web3.eth.accounts[0]);\n        }\n        if (!localClaim) {\n            this.config.logger.debug(`[${txRequest.address}] In reserve window and not claimed by this TimeNode.`);\n        }\n        return localClaim;\n    }\n    route(txRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let status = this.txRequestStates[txRequest.address] || TxStatus.BeforeClaimWindow;\n            const statusFunction = this.transitions[status];\n            let nextStatus = yield statusFunction(txRequest);\n            while (nextStatus !== status) {\n                this.config.logger.info(`${txRequest.address} Transitioning from  ${TxStatus[status]} to ${TxStatus[nextStatus]} (${nextStatus})`);\n                status = nextStatus;\n                nextStatus = yield this.transitions[status](txRequest);\n            }\n            this.txRequestStates[txRequest.address] = nextStatus;\n            return nextStatus;\n        });\n    }\n}\n","export { default } from './Router';\n","const version = require('../package.json').version;\nexport default version;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Actions from './Actions';\nimport { Networks } from './Enum';\nimport Scanner from './Scanner';\nimport Router from './Router';\nimport Version from './Version';\nexport default class TimeNode {\n    constructor(config) {\n        this.actions = new Actions(config);\n        this.config = config;\n        this.router = new Router(this.config, this.actions);\n        this.scanner = new Scanner(this.config, this.router);\n        this.config.statsDb.initialize(this.config.wallet.getAddresses());\n        this.startupMessage();\n    }\n    startupMessage() {\n        this.config.logger.info('EAC-TimeNode');\n        this.config.logger.info('Version: ' + Version);\n    }\n    logNetwork() {\n        this.config.web3.version.getNetwork((error, result) => {\n            if (error) {\n                throw new Error(error);\n            }\n            else {\n                this.config.logger.info('Operating on ' + Networks[result]);\n            }\n        });\n    }\n    startScanning() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If already scanning, hard-reset the Scanner module.\n            if (this.scanner.scanning) {\n                this.scanner.stop();\n            }\n            return this.scanner.start();\n        });\n    }\n    stopScanning() {\n        return this.scanner.stop();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BigNumber from 'bignumber.js';\n// / Wrapper over a lokijs persistent storage to keep track of the stats of executing accounts.\nexport class StatsDB {\n    constructor(web3, db) {\n        this.db = db;\n        this.web3 = web3;\n        this.eac = require('eac.js-lib')(web3);\n        const fetchedStats = this.db.getCollection('stats');\n        this.stats =\n            fetchedStats !== null ? fetchedStats : this.db.addCollection('stats');\n    }\n    // / Takes an array of addresses and stores them as new stats objects.\n    initialize(accounts) {\n        accounts.forEach((account) => __awaiter(this, void 0, void 0, function* () {\n            const found = this.stats.find({ account })[0];\n            if (found) {\n                const bounties = found.bounties || 0;\n                const costs = found.costs || 0;\n                found.bounties = new BigNumber(bounties);\n                found.costs = new BigNumber(costs);\n            }\n            else {\n                this.stats.insert({\n                    account,\n                    claimed: 0,\n                    executed: 0,\n                    bounties: new BigNumber(0),\n                    costs: new BigNumber(0),\n                    executedTransactions: []\n                });\n            }\n        }));\n    }\n    // / Takes the account which has claimed a transaction.\n    updateClaimed(account, cost) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const found = this.stats.find({ account })[0];\n            found.claimed += 1;\n            found.costs = found.costs.plus(cost);\n            this.stats.update(found);\n        });\n    }\n    // / Takes the account which has executed a transaction.\n    updateExecuted(account, bounty, cost) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const found = this.stats.find({ account })[0];\n            if (!found) {\n                return;\n            }\n            found.executed += 1;\n            found.executedTransactions.push({ timestamp: Date.now() });\n            found.bounties = found.bounties.plus(bounty);\n            found.costs = found.costs.plus(cost);\n            this.stats.update(found);\n        });\n    }\n    // / Gets the stats\n    // @returns an array of the DB objs\n    getStats() {\n        return this.stats.data;\n    }\n}\n","export { StatsDB } from './StatsDB';\n","import Config from './Config';\nimport TimeNode from './TimeNode';\nimport Wallet from './Wallet';\nimport { StatsDB } from './Stats';\nimport 'babel-polyfill';\nexport { Config, TimeNode, Wallet, StatsDB };\n"]}